{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth/auth-guard.ts","webpack:///./src/app/auth/auth-interceptor.ts","webpack:///./src/app/auth/auth.service.ts","webpack:///./src/app/auth/login/login.component.css","webpack:///./src/app/auth/login/login.component.html","webpack:///./src/app/auth/login/login.component.ts","webpack:///./src/app/auth/signup/signup.component.css","webpack:///./src/app/auth/signup/signup.component.html","webpack:///./src/app/auth/signup/signup.component.ts","webpack:///./src/app/dashboard-component/dashboard.component.css","webpack:///./src/app/dashboard-component/dashboard.component.html","webpack:///./src/app/dashboard-component/dashboard.component.ts","webpack:///./src/app/dashboard-component/dashboard.service.ts","webpack:///./src/app/header-side-menu/header-side-menu.component.css","webpack:///./src/app/header-side-menu/header-side-menu.component.html","webpack:///./src/app/header-side-menu/header-side-menu.component.ts","webpack:///./src/app/help/help.component.css","webpack:///./src/app/help/help.component.html","webpack:///./src/app/help/help.component.ts","webpack:///./src/app/posts/post-create/mime-type.validator.ts","webpack:///./src/app/posts/post-create/post-create.component.css","webpack:///./src/app/posts/post-create/post-create.component.html","webpack:///./src/app/posts/post-create/post-create.component.ts","webpack:///./src/app/posts/post-list/post-list.component.css","webpack:///./src/app/posts/post-list/post-list.component.html","webpack:///./src/app/posts/post-list/post-list.component.ts","webpack:///./src/app/posts/posts.service.ts","webpack:///./src/app/test-component/test.component.css","webpack:///./src/app/test-component/test.component.html","webpack:///./src/app/test-component/test.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","\r\n\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router'; // import module for routes handling\r\nimport { PostCreateComponent } from './posts/post-create/post-create.component'; // component for creating new utility payment\r\nimport { PostListComponent } from './posts/post-list/post-list.component'; // comp. for listing all of users utility payments\r\nimport { LoginComponent } from './auth/login/login.component'; \r\nimport { SignupComponent } from './auth/signup/signup.component';\r\nimport { HelpComponent } from './help/help.component';\r\nimport { AuthGuard } from './auth/auth-guard'; // component to check if user is authenticated before accessing to other assets\r\nimport { DashboardComponent } from './dashboard-component/dashboard.component';\r\nimport { TestComponent } from './test-component/test.component';\r\nimport { HeaderSideMenuComponent } from './header-side-menu/header-side-menu.component';\r\n\r\n// we define components to be called upon activation of corresponding route\r\nconst routes: Routes = [\r\n\r\n  { path: 'list', component: PostListComponent, canActivate: [AuthGuard] },\r\n  \r\n  /**\r\n   * Guarded route, before its activation system checks if\r\n   * the user is logged in via authGuard route guard.\r\n   */\r\n  { path: 'create', component: PostCreateComponent, canActivate: [AuthGuard] },\r\n  \r\n  /**\r\n   * Defining path as 'sth/:postId' we are defing dynamic part of URL from which data should be taken\r\n   *  */ \r\n  { path: 'edit/:postId', component: PostCreateComponent, canActivate: [AuthGuard] }, \r\n  \r\n  { path: 'login', component: LoginComponent },\r\n  { path: 'signup', component: SignupComponent },\r\n  { path: '', component: DashboardComponent, canActivate: [AuthGuard] },\r\n  { path: 'test', component: TestComponent },\r\n  { path: 'help', component: HelpComponent, canActivate: [AuthGuard] },\r\n  { path: '**', redirectTo: '/' }\r\n\r\n];\r\n\r\n/**\r\n * We define decorator. With this decorator\r\n * we are upgrading base class to be NgModule\r\n * by adding two more fields\r\n */ \r\n \r\n@NgModule({\r\n \r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule],\r\n  providers: [AuthGuard] //route guard to protect unathorized URL access to server resource\r\n})\r\nexport class AppRoutingModule { }\r\n","module.exports = \"\\r\\n\\r\\nmain{\\r\\n  width:80%;\\r\\n}\\r\\n\\r\\n::ng-deep .mat-progress-spinner circle, .mat-spinner circle {\\r\\n  stroke: maroon;\\r\\n  stroke-width: 4% !important;\\r\\n}\\r\\n\\r\\n::ng-deep .mat-progress-bar-fill::after {\\r\\n  background-color: goldenrod;\\r\\n}\\r\\n\\r\\n::ng-deep .mat-input-element {\\r\\n  caret-color: green;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFFQTtFQUNFLFNBQVM7QUFDWDs7QUFFQTtFQUNFLGNBQWM7RUFDZCwyQkFBMkI7QUFDN0I7O0FBRUE7RUFDRSwyQkFBMkI7QUFDN0I7O0FBRUE7RUFDRSxrQkFBa0I7QUFDcEIiLCJmaWxlIjoic3JjL2FwcC9hcHAuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIlxyXG5cclxubWFpbntcclxuICB3aWR0aDo4MCU7XHJcbn1cclxuXHJcbjo6bmctZGVlcCAubWF0LXByb2dyZXNzLXNwaW5uZXIgY2lyY2xlLCAubWF0LXNwaW5uZXIgY2lyY2xlIHtcclxuICBzdHJva2U6IG1hcm9vbjtcclxuICBzdHJva2Utd2lkdGg6IDQlICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbjo6bmctZGVlcCAubWF0LXByb2dyZXNzLWJhci1maWxsOjphZnRlciB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogZ29sZGVucm9kO1xyXG59XHJcblxyXG46Om5nLWRlZXAgLm1hdC1pbnB1dC1lbGVtZW50IHtcclxuICBjYXJldC1jb2xvcjogZ3JlZW47XHJcbn0iXX0= */\"","module.exports = \"<app-header></app-header>\\r\\n<main>\\r\\n  <router-outlet></router-outlet>\\r\\n</main>\\r\\n\"","\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from './auth/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\n\r\nexport class AppComponent implements OnInit { // ovako omogucujemo @ng da zna kojoj komponenti (klasi) pristupamo\r\n  constructor(private authService: AuthService) { }\r\n  ngOnInit() {\r\n    /**\r\n     * From this component we call function\r\n     * autoAuthUser form authService component.\r\n     * This function checks if the user is logged\r\n     * in and sets timer for token. On timer's expiration\r\n     * function loggs out user. If user reloads page\r\n     * or even closes it (and the token is still active)\r\n     * it aoutomaticly loggs in user. We call it from here\r\n     * because we are 100% sure that this component will \r\n     * be first loaded when we start web app.  \r\n     *  \r\n     * */\r\n  this.authService.autoAuthUser();\r\n }\r\n}\r\n","\r\n\r\nimport { NgModule } from \"@angular/core\";\r\nimport { BrowserModule } from \"@angular/platform-browser\";\r\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\r\nimport { ReactiveFormsModule, FormsModule } from \"@angular/forms\";\r\nimport { MatVideoModule } from \"mat-video\";\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from \"@angular/common/http\";\r\nimport {\r\n  MatInputModule,\r\n  MatCardModule,\r\n  MatButtonModule,\r\n  MatToolbarModule,\r\n  MatExpansionModule,\r\n  MatProgressSpinnerModule,\r\n  MatPaginatorModule,\r\n  MatMenuModule,\r\n  MatIconModule,\r\n  MatSidenavModule,\r\n  MatListModule,\r\n  MatChipsModule,\r\n  MatCheckboxModule,\r\n  MatGridListModule,\r\n  MatTableModule,\r\n  MatOptionModule,\r\n  MatSelectModule,\r\n  MatProgressBarModule,\r\n  MatSortModule,\r\n} from \"@angular/material\";\r\n\r\nimport { AppComponent } from \"./app.component\";\r\nimport { HeaderSideMenuComponent } from \"./header-side-menu/header-side-menu.component\";\r\nimport { PostCreateComponent } from \"./posts/post-create/post-create.component\";\r\nimport { PostListComponent } from \"./posts/post-list/post-list.component\";\r\nimport { LoginComponent } from \"./auth/login/login.component\";\r\nimport { SignupComponent } from \"./auth/signup/signup.component\";\r\nimport { HelpComponent } from \"./help/help.component\";\r\nimport { AuthInterceptor } from \"./auth/auth-interceptor\";\r\nimport { AppRoutingModule } from \"./app-routing.module\";\r\nimport { DashboardComponent } from \"./dashboard-component/dashboard.component\";\r\nimport { TestComponent } from \"./test-component/test.component\";\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    PostCreateComponent,\r\n    HeaderSideMenuComponent,\r\n    PostListComponent,\r\n    LoginComponent,\r\n    SignupComponent,\r\n    HelpComponent,\r\n    DashboardComponent,\r\n    TestComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    BrowserAnimationsModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    MatInputModule,\r\n    MatCardModule,\r\n    MatButtonModule,\r\n    MatToolbarModule,\r\n    MatExpansionModule,\r\n    MatProgressSpinnerModule,\r\n    MatPaginatorModule,\r\n    MatButtonModule,\r\n    MatMenuModule,\r\n    MatIconModule,\r\n    MatSidenavModule,\r\n    MatListModule,\r\n    MatChipsModule,\r\n    MatCheckboxModule,\r\n    MatGridListModule,\r\n    MatTableModule,\r\n    MatOptionModule,\r\n    MatSelectModule,\r\n    MatVideoModule,\r\n    MatSortModule,\r\n    MatProgressBarModule,\r\n  ],\r\n\r\n  providers: [\r\n    { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true },\r\n  ],\r\n  bootstrap: [AppComponent], // allow component to be used in all component parts (for example in HTML) and not just in other modules\r\n})\r\nexport class AppModule {}\r\n","\r\n\r\nimport { CanActivate , ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { Injectable } from '@angular/core';\r\nimport { AuthService } from './auth.service';\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(private authService: AuthService, private router: Router) { }\r\n  canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ): boolean | Observable<boolean> | Promise <boolean> {\r\n    const isAuth = this.authService.getIsAuth(); //check if user is authenticated\r\n    if (!isAuth) {\r\n      this.router.navigate(['/login']); // if not, navigate user to login page\r\n    }\r\n    return isAuth;\r\n  }\r\n}\r\n","\r\n\r\nimport {\r\n  HttpInterceptor,\r\n  HttpRequest,\r\n  HttpHandler,\r\n} from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { AuthService } from \"./auth.service\";\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n  constructor(private authService: AuthService) {}\r\n  /* <any> - intercept all kinds of HTTP requests*/\r\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\r\n    if (this.authService.getIsAuth()) {\r\n      const authToken = this.authService.getToken();\r\n      /**\r\n       * We must not edit intercepted HTTP request.\r\n       * Instead, we make exact copy of it, and append\r\n       * token (retreived from front-end) to it.\r\n       */\r\n      const authRequest = req.clone({\r\n        headers: req.headers.set(\"Authorization\", \"Bearer \" + authToken),\r\n      });\r\n      return next.handle(authRequest); // pass-through changed HTTP request on its voyage to server\r\n    } else {\r\n      return next.handle(req);\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { AuthData } from \"./auth-data.model\";\r\nimport { Router } from \"@angular/router\";\r\nimport { Subject } from \"rxjs\";\r\n\r\n@Injectable({ providedIn: \"root\" })\r\nexport class AuthService {\r\n  private isAuthenticated = false;\r\n  private token: string;\r\n  private userId: string;\r\n  private tokenTimer: any; // variable of TimeOut timer\r\n  private authStatusListener = new Subject<boolean>(); // user authentication status listener\r\n\r\n  constructor(private http: HttpClient, private router: Router) {}\r\n  rootURL = \"/api\";\r\n  /*\r\n   * Method which returns user's token.\r\n   * used in posts.service.ts\r\n   * */\r\n  getToken() {\r\n    return this.token;\r\n  }\r\n  getIsAuth() {\r\n    return this.isAuthenticated;\r\n  }\r\n\r\n  getUserId() {\r\n    return this.userId;\r\n  }\r\n\r\n  getAuthStatusListener() {\r\n    return this.authStatusListener.asObservable();\r\n  }\r\n  createUser(\r\n    firstName: string,\r\n    lastName: string,\r\n    email: string,\r\n    password: string,\r\n    phoneNumber: string,\r\n    accountType: string\r\n  ) {\r\n    const signupData = {\r\n      firstName,\r\n      lastName,\r\n      email,\r\n      password,\r\n      phoneNumber,\r\n      accountType,\r\n    };\r\n    console.log(signupData);\r\n    this.http\r\n      .post(this.rootURL + \"/v1/auth/register\", signupData)\r\n      .subscribe((response) => {\r\n        this.router.navigate([\"/login\"]);\r\n        console.log(response);\r\n      });\r\n  }\r\n\r\n  login(email: string, password: string) {\r\n    const authData: AuthData = { email: email, password: password };\r\n    this.http\r\n      .post<{\r\n        tokens: {\r\n          access: { token: string; expires: Date };\r\n          refresh: { token: string; expires: Date };\r\n        };\r\n      }>(this.rootURL + \"/v1/auth/login\", authData)\r\n      .subscribe((response) => {\r\n        const token = response.tokens.access.token;\r\n        this.token = token;\r\n        if (token) {\r\n          const expiresDate = response.tokens.access.expires;\r\n          this.setAuthTimer(3600);\r\n          this.isAuthenticated = true;\r\n          this.authStatusListener.next(true);\r\n          const expirationDate = new Date(expiresDate);\r\n          this.saveAuthData(token, expirationDate);\r\n          this.router.navigate([\"/\"]);\r\n        }\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Method which tries to authenticate user\r\n   * if there is unexpired token in local storage\r\n   * */\r\n  autoAuthUser() {\r\n    const authInformation = this.getAuthData();\r\n    if (!authInformation) {\r\n      return;\r\n    }\r\n    const now = new Date();\r\n    const expiresIn = authInformation.expirationDate.getTime() - now.getTime();\r\n    if (expiresIn > 0) {\r\n      this.token = authInformation.token;\r\n      this.isAuthenticated = true;\r\n      this.setAuthTimer(expiresIn / 1000); //ms\r\n      this.authStatusListener.next(true);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Logout method. Before user is logged out\r\n   * it first deletes token, then emits that\r\n   * information through authStatusListener\r\n   * and clears timeout timer\r\n   */\r\n  logout() {\r\n    this.token = null;\r\n    this.isAuthenticated = false;\r\n    this.authStatusListener.next(false);\r\n    clearTimeout(this.tokenTimer);\r\n    if (!this.token && !this.isAuthenticated) {\r\n      this.clearAuthData();\r\n      this.router.navigate([\"/login\"]);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Timer function to call logout method after 1h expires\r\n   */\r\n  private setAuthTimer(duration: number) {\r\n    this.tokenTimer = setTimeout(() => {\r\n      this.logout();\r\n    }, duration * 1000);\r\n  }\r\n\r\n  /**\r\n   * Private method used to store token in browsers local stroge.\r\n   */\r\n  private saveAuthData(token: string, expirationDate: Date) {\r\n    localStorage.setItem(\"token\", token);\r\n    localStorage.setItem(\"expiration\", expirationDate.toISOString());\r\n  }\r\n  /**\r\n   * Method to clear local storage.\r\n   */\r\n  private clearAuthData() {\r\n    localStorage.removeItem(\"token\");\r\n    localStorage.removeItem(\"expiration\");\r\n  }\r\n\r\n  /**\r\n   * Method which returns token,\r\n   * token expiration date and users\r\n   * bankAccountID from browser local storage.\r\n   * */\r\n  getAuthData() {\r\n    const token = localStorage.getItem(\"token\");\r\n    const expirationDate = localStorage.getItem(\"expiration\");\r\n\r\n    if (!token && !expirationDate) {\r\n      return;\r\n    }\r\n    return {\r\n      token: token,\r\n      expirationDate: new Date(expirationDate),\r\n    };\r\n  }\r\n}\r\n","module.exports = \"\\r\\n\\r\\nmat-form-field {\\r\\n  min-width: 256px;\\r\\n}\\r\\n\\r\\nbutton {\\r\\n  margin-right: 2mm;\\r\\n  margin-top: 1mm;\\r\\n}\\r\\n\\r\\n.mat-raised-button.mat-red {\\r\\n  background-color: rgba(43, 130, 243, 0.863);\\r\\n  color: #ffffff;\\r\\n  margin-top: -12px;\\r\\n  margin-bottom: 5px;\\r\\n}\\r\\n\\r\\n.button {\\r\\n  display: flex;\\r\\n  justify-content: flex-end;\\r\\n}\\r\\n\\r\\nmat-spinner {\\r\\n  margin: auto;\\r\\n}\\r\\n\\r\\n:host {\\r\\n  display: flex;\\r\\n  position: relative;\\r\\n  left: 140px;\\r\\n  justify-content: center;\\r\\n  margin: 120px 0px;\\r\\n}\\r\\n\\r\\n.mat-form-field {\\r\\n  display: contents;\\r\\n  width: 100%;\\r\\n  min-width: 300px;\\r\\n}\\r\\n\\r\\nmat-card {\\r\\n  background-color: #ffffffe6;\\r\\n  border-radius: 15px;\\r\\n  top: -60px;\\r\\n  padding: 18px;\\r\\n}\\r\\n\\r\\nmat-card-title,\\r\\nmat-card-content {\\r\\n  display: flex;\\r\\n  justify-content: center;\\r\\n}\\r\\n\\r\\nmat-card-title {\\r\\n  font-weight: 400;\\r\\n  font-size: 22px;\\r\\n}\\r\\n\\r\\n.logo-login {\\r\\n  width: 250px;\\r\\n  display: block;\\r\\n  margin-left: auto;\\r\\n  margin-right: auto;\\r\\n}\\r\\n\\r\\n.logo-name {\\r\\n  color: rgba(182, 182, 182, 0.925);\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXV0aC9sb2dpbi9sb2dpbi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBRUE7RUFDRSxnQkFBZ0I7QUFDbEI7O0FBRUE7RUFDRSxpQkFBaUI7RUFDakIsZUFBZTtBQUNqQjs7QUFFQTtFQUNFLDJDQUEyQztFQUMzQyxjQUFjO0VBQ2QsaUJBQWlCO0VBQ2pCLGtCQUFrQjtBQUNwQjs7QUFFQTtFQUNFLGFBQWE7RUFDYix5QkFBeUI7QUFDM0I7O0FBRUE7RUFDRSxZQUFZO0FBQ2Q7O0FBRUE7RUFDRSxhQUFhO0VBQ2Isa0JBQWtCO0VBQ2xCLFdBQVc7RUFDWCx1QkFBdUI7RUFDdkIsaUJBQWlCO0FBQ25COztBQUVBO0VBQ0UsaUJBQWlCO0VBQ2pCLFdBQVc7RUFDWCxnQkFBZ0I7QUFDbEI7O0FBRUE7RUFDRSwyQkFBMkI7RUFDM0IsbUJBQW1CO0VBQ25CLFVBQVU7RUFDVixhQUFhO0FBQ2Y7O0FBRUE7O0VBRUUsYUFBYTtFQUNiLHVCQUF1QjtBQUN6Qjs7QUFFQTtFQUNFLGdCQUFnQjtFQUNoQixlQUFlO0FBQ2pCOztBQUVBO0VBQ0UsWUFBWTtFQUNaLGNBQWM7RUFDZCxpQkFBaUI7RUFDakIsa0JBQWtCO0FBQ3BCOztBQUVBO0VBQ0UsaUNBQWlDO0FBQ25DIiwiZmlsZSI6InNyYy9hcHAvYXV0aC9sb2dpbi9sb2dpbi5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiXHJcblxyXG5tYXQtZm9ybS1maWVsZCB7XHJcbiAgbWluLXdpZHRoOiAyNTZweDtcclxufVxyXG5cclxuYnV0dG9uIHtcclxuICBtYXJnaW4tcmlnaHQ6IDJtbTtcclxuICBtYXJnaW4tdG9wOiAxbW07XHJcbn1cclxuXHJcbi5tYXQtcmFpc2VkLWJ1dHRvbi5tYXQtcmVkIHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDQzLCAxMzAsIDI0MywgMC44NjMpO1xyXG4gIGNvbG9yOiAjZmZmZmZmO1xyXG4gIG1hcmdpbi10b3A6IC0xMnB4O1xyXG4gIG1hcmdpbi1ib3R0b206IDVweDtcclxufVxyXG5cclxuLmJ1dHRvbiB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kO1xyXG59XHJcblxyXG5tYXQtc3Bpbm5lciB7XHJcbiAgbWFyZ2luOiBhdXRvO1xyXG59XHJcblxyXG46aG9zdCB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgbGVmdDogMTQwcHg7XHJcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgbWFyZ2luOiAxMjBweCAwcHg7XHJcbn1cclxuXHJcbi5tYXQtZm9ybS1maWVsZCB7XHJcbiAgZGlzcGxheTogY29udGVudHM7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgbWluLXdpZHRoOiAzMDBweDtcclxufVxyXG5cclxubWF0LWNhcmQge1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmZmZmZlNjtcclxuICBib3JkZXItcmFkaXVzOiAxNXB4O1xyXG4gIHRvcDogLTYwcHg7XHJcbiAgcGFkZGluZzogMThweDtcclxufVxyXG5cclxubWF0LWNhcmQtdGl0bGUsXHJcbm1hdC1jYXJkLWNvbnRlbnQge1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbn1cclxuXHJcbm1hdC1jYXJkLXRpdGxlIHtcclxuICBmb250LXdlaWdodDogNDAwO1xyXG4gIGZvbnQtc2l6ZTogMjJweDtcclxufVxyXG5cclxuLmxvZ28tbG9naW4ge1xyXG4gIHdpZHRoOiAyNTBweDtcclxuICBkaXNwbGF5OiBibG9jaztcclxuICBtYXJnaW4tbGVmdDogYXV0bztcclxuICBtYXJnaW4tcmlnaHQ6IGF1dG87XHJcbn1cclxuXHJcbi5sb2dvLW5hbWUge1xyXG4gIGNvbG9yOiByZ2JhKDE4MiwgMTgyLCAxODIsIDAuOTI1KTtcclxufVxyXG4iXX0= */\"","module.exports = \"<mat-card layout=\\\"row\\\">\\r\\n  <img class=\\\"logo-login\\\" src=\\\"../../../assets/images/logo-login.png\\\" alt=\\\"\\\" />\\r\\n  <mat-card-title class=\\\"logo-name\\\">Voguel Banking</mat-card-title>\\r\\n  <p></p>\\r\\n  <mat-card-title>Sign In</mat-card-title>\\r\\n  <mat-card-content>\\r\\n    <mat-spinner *ngIf=\\\"isLoading\\\"></mat-spinner>\\r\\n    <form (submit)=\\\"onLogin(loginForm)\\\" #loginForm=\\\"ngForm\\\" *ngIf=\\\"!isLoading\\\">\\r\\n      <p>\\r\\n        <mat-form-field>\\r\\n          <input\\r\\n            matInput\\r\\n            ngModel\\r\\n            #emailInput=\\\"ngModel\\\"\\r\\n            type=\\\"email\\\"\\r\\n            name=\\\"email\\\"\\r\\n            placeholder=\\\"E-mail\\\"\\r\\n            required\\r\\n            email\\r\\n          />\\r\\n          <mat-error *ngIf=\\\"emailInput.invalid\\\"\\r\\n            >Please enter valid e-mail</mat-error\\r\\n          >\\r\\n        </mat-form-field>\\r\\n      </p>\\r\\n      <p>\\r\\n        <mat-form-field>\\r\\n          <input\\r\\n            matInput\\r\\n            ngModel\\r\\n            #passwordInput=\\\"ngModel\\\"\\r\\n            type=\\\"password\\\"\\r\\n            name=\\\"password\\\"\\r\\n            placeholder=\\\"Password\\\"\\r\\n            required\\r\\n          />\\r\\n          <mat-error *ngIf=\\\"passwordInput.invalid\\\"\\r\\n            >Please enter password.</mat-error\\r\\n          >\\r\\n        </mat-form-field>\\r\\n      </p>\\r\\n      <div>\\r\\n        <button\\r\\n          [disabled]=\\\"loginForm.invalid\\\"\\r\\n          mat-raised-button\\r\\n          color=\\\"red\\\"\\r\\n          type=\\\"submit\\\"\\r\\n          *ngIf=\\\"!isLoading\\\"\\r\\n        >\\r\\n          Log in\\r\\n        </button>\\r\\n        <mat-spinner *ngIf=\\\"isLoading\\\"></mat-spinner>\\r\\n      </div>\\r\\n    </form>\\r\\n  </mat-card-content>\\r\\n</mat-card>\\r\\n\"","\r\n\r\nimport {Component} from '@angular/core'; \r\nimport { NgForm } from '@angular/forms';\r\nimport { AuthService } from '../auth.service';\r\n\r\n@Component({ \r\n  templateUrl: './login.component.html',  \r\n  styleUrls: ['./login.component.css']\r\n})\r\n\r\nexport class LoginComponent { \r\n  isLoading = false;\r\n  constructor(public authService: AuthService) {}\r\n  onLogin(form: NgForm) {\r\n    if (form.invalid) {\r\n      return;\r\n    }\r\n    this.isLoading = true;\r\n    this.authService.login(form.value.email, form.value.password);\r\n  }\r\n}\r\n","module.exports = \"\\r\\n\\r\\nmat-form-field {\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\nbutton {\\r\\n  margin-right: 2mm;\\r\\n  margin-top: 1mm;\\r\\n}\\r\\n\\r\\n.mat-raised-button.mat-red {\\r\\n  background-color: rgba(43, 130, 243, 0.863);\\r\\n  color: #ffffff;\\r\\n  margin-top: -12px;\\r\\n  margin-bottom: 5px;\\r\\n}\\r\\n\\r\\n.button {\\r\\n  display: flex;\\r\\n  justify-content: flex-end;\\r\\n}\\r\\n\\r\\nmat-spinner {\\r\\n  margin: auto;\\r\\n}\\r\\n\\r\\n:host {\\r\\n  display: flex;\\r\\n  position: relative;\\r\\n  left: 140px;\\r\\n  justify-content: center;\\r\\n  margin: 120px 0px;\\r\\n}\\r\\n\\r\\n.mat-form-field {\\r\\n  width: 100%;\\r\\n  min-width: 300px;\\r\\n}\\r\\n\\r\\nmat-card {\\r\\n  background-color: #ffffffe6;\\r\\n  top: -60px;\\r\\n}\\r\\n\\r\\nmat-card-title,\\r\\nmat-card-content {\\r\\n  display: flex;\\r\\n  justify-content: center;\\r\\n}\\r\\n\\r\\nmat-card-title {\\r\\n  position: relative;\\r\\n  font-weight: 400;\\r\\n  font-size: 22px;\\r\\n  margin-left: -110px;\\r\\n  margin-right: 8px;\\r\\n  left: 259px;\\r\\n}\\r\\n\\r\\n.logo-signup {\\r\\n  width: 250px;\\r\\n  margin-right: -50px;\\r\\n  height: -webkit-fit-content;\\r\\n  height: -moz-fit-content;\\r\\n  height: fit-content;\\r\\n  padding-top: 69px;\\r\\n}\\r\\n\\r\\n.logo-name {\\r\\n  position: relative;\\r\\n  left: 110px;\\r\\n  top: 232px;\\r\\n  color: rgba(182, 182, 182, 0.925);\\r\\n}\\r\\n\\r\\n.signup-box {\\r\\n  display: flex;\\r\\n  position: relative;\\r\\n  top: -76px;\\r\\n  border-radius: 14px;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXV0aC9zaWdudXAvc2lnbnVwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFFQTtFQUNFLFdBQVc7QUFDYjs7QUFFQTtFQUNFLGlCQUFpQjtFQUNqQixlQUFlO0FBQ2pCOztBQUVBO0VBQ0UsMkNBQTJDO0VBQzNDLGNBQWM7RUFDZCxpQkFBaUI7RUFDakIsa0JBQWtCO0FBQ3BCOztBQUVBO0VBQ0UsYUFBYTtFQUNiLHlCQUF5QjtBQUMzQjs7QUFHQTtFQUNFLFlBQVk7QUFDZDs7QUFFQTtFQUNFLGFBQWE7RUFDYixrQkFBa0I7RUFDbEIsV0FBVztFQUNYLHVCQUF1QjtFQUN2QixpQkFBaUI7QUFDbkI7O0FBRUE7RUFDRSxXQUFXO0VBQ1gsZ0JBQWdCO0FBQ2xCOztBQUVBO0VBQ0UsMkJBQTJCO0VBQzNCLFVBQVU7QUFDWjs7QUFFQTs7RUFFRSxhQUFhO0VBQ2IsdUJBQXVCO0FBQ3pCOztBQUVBO0VBQ0Usa0JBQWtCO0VBQ2xCLGdCQUFnQjtFQUNoQixlQUFlO0VBQ2YsbUJBQW1CO0VBQ25CLGlCQUFpQjtFQUNqQixXQUFXO0FBQ2I7O0FBRUE7RUFDRSxZQUFZO0VBQ1osbUJBQW1CO0VBQ25CLDJCQUFtQjtFQUFuQix3QkFBbUI7RUFBbkIsbUJBQW1CO0VBQ25CLGlCQUFpQjtBQUNuQjs7QUFFQTtFQUNFLGtCQUFrQjtFQUNsQixXQUFXO0VBQ1gsVUFBVTtFQUNWLGlDQUFpQztBQUNuQzs7QUFFQTtFQUNFLGFBQWE7RUFDYixrQkFBa0I7RUFDbEIsVUFBVTtFQUNWLG1CQUFtQjtBQUNyQiIsImZpbGUiOiJzcmMvYXBwL2F1dGgvc2lnbnVwL3NpZ251cC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiXHJcblxyXG5tYXQtZm9ybS1maWVsZCB7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbn1cclxuXHJcbmJ1dHRvbiB7XHJcbiAgbWFyZ2luLXJpZ2h0OiAybW07XHJcbiAgbWFyZ2luLXRvcDogMW1tO1xyXG59XHJcblxyXG4ubWF0LXJhaXNlZC1idXR0b24ubWF0LXJlZCB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSg0MywgMTMwLCAyNDMsIDAuODYzKTtcclxuICBjb2xvcjogI2ZmZmZmZjtcclxuICBtYXJnaW4tdG9wOiAtMTJweDtcclxuICBtYXJnaW4tYm90dG9tOiA1cHg7XHJcbn1cclxuXHJcbi5idXR0b24ge1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcclxufVxyXG5cclxuXHJcbm1hdC1zcGlubmVyIHtcclxuICBtYXJnaW46IGF1dG87XHJcbn1cclxuXHJcbjpob3N0IHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICBsZWZ0OiAxNDBweDtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICBtYXJnaW46IDEyMHB4IDBweDtcclxufVxyXG5cclxuLm1hdC1mb3JtLWZpZWxkIHtcclxuICB3aWR0aDogMTAwJTtcclxuICBtaW4td2lkdGg6IDMwMHB4O1xyXG59XHJcblxyXG5tYXQtY2FyZCB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZmZmZmU2O1xyXG4gIHRvcDogLTYwcHg7XHJcbn1cclxuXHJcbm1hdC1jYXJkLXRpdGxlLFxyXG5tYXQtY2FyZC1jb250ZW50IHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG59XHJcblxyXG5tYXQtY2FyZC10aXRsZSB7XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIGZvbnQtd2VpZ2h0OiA0MDA7XHJcbiAgZm9udC1zaXplOiAyMnB4O1xyXG4gIG1hcmdpbi1sZWZ0OiAtMTEwcHg7XHJcbiAgbWFyZ2luLXJpZ2h0OiA4cHg7XHJcbiAgbGVmdDogMjU5cHg7XHJcbn1cclxuXHJcbi5sb2dvLXNpZ251cCB7XHJcbiAgd2lkdGg6IDI1MHB4O1xyXG4gIG1hcmdpbi1yaWdodDogLTUwcHg7XHJcbiAgaGVpZ2h0OiBmaXQtY29udGVudDtcclxuICBwYWRkaW5nLXRvcDogNjlweDtcclxufVxyXG5cclxuLmxvZ28tbmFtZSB7XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIGxlZnQ6IDExMHB4O1xyXG4gIHRvcDogMjMycHg7XHJcbiAgY29sb3I6IHJnYmEoMTgyLCAxODIsIDE4MiwgMC45MjUpO1xyXG59XHJcblxyXG4uc2lnbnVwLWJveCB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgdG9wOiAtNzZweDtcclxuICBib3JkZXItcmFkaXVzOiAxNHB4O1xyXG59XHJcbiJdfQ== */\"","module.exports = \"<mat-card class=\\\"signup-box\\\" layout=\\\"row\\\">\\r\\n  <img\\r\\n    class=\\\"logo-signup\\\"\\r\\n    src=\\\"../../../assets//images/logo-login.png\\\"\\r\\n    alt=\\\"\\\"\\r\\n  />\\r\\n\\r\\n  <p></p>\\r\\n  <mat-card-title>Become a Client</mat-card-title>\\r\\n  <mat-card-content>\\r\\n    <mat-spinner *ngIf=\\\"isLoading\\\"></mat-spinner>\\r\\n    <form\\r\\n      (submit)=\\\"onSignup(signupForm)\\\"\\r\\n      #signupForm=\\\"ngForm\\\"\\r\\n      *ngIf=\\\"!isLoading\\\"\\r\\n    >\\r\\n      <p>\\r\\n        <mat-form-field>\\r\\n          <input\\r\\n            matInput\\r\\n            ngModel\\r\\n            #fnameInput=\\\"ngModel\\\"\\r\\n            type=\\\"text\\\"\\r\\n            name=\\\"firstName\\\"\\r\\n            placeholder=\\\"first name\\\"\\r\\n            required\\r\\n            minlength=\\\"3\\\"\\r\\n          />\\r\\n          <mat-error *ngIf=\\\"fnameInput.invalid\\\"\\r\\n            >Please enter first name 3 minimum length</mat-error\\r\\n          >\\r\\n        </mat-form-field>\\r\\n      </p>\\r\\n      <p>\\r\\n        <mat-form-field>\\r\\n          <input\\r\\n            matInput\\r\\n            ngModel\\r\\n            #lnameInput=\\\"ngModel\\\"\\r\\n            type=\\\"text\\\"\\r\\n            name=\\\"lastName\\\"\\r\\n            placeholder=\\\"last name\\\"\\r\\n            required\\r\\n            minlength=\\\"3\\\"\\r\\n          />\\r\\n          <mat-error *ngIf=\\\"lnameInput.invalid\\\"\\r\\n            >Please enter last name</mat-error\\r\\n          >\\r\\n        </mat-form-field>\\r\\n      </p>\\r\\n      <p>\\r\\n        <mat-form-field>\\r\\n          <input\\r\\n            matInput\\r\\n            ngModel\\r\\n            #emailInput=\\\"ngModel\\\"\\r\\n            type=\\\"email\\\"\\r\\n            name=\\\"email\\\"\\r\\n            placeholder=\\\"E-mail\\\"\\r\\n            required\\r\\n            email\\r\\n          />\\r\\n          <mat-error *ngIf=\\\"emailInput.invalid\\\"\\r\\n            >Please enter valid e-mail</mat-error\\r\\n          >\\r\\n        </mat-form-field>\\r\\n      </p>\\r\\n      <p>\\r\\n        <mat-form-field>\\r\\n          <input\\r\\n            matInput\\r\\n            ngModel\\r\\n            #phoneInput=\\\"ngModel\\\"\\r\\n            type=\\\"number\\\"\\r\\n            name=\\\"phoneNumber\\\"\\r\\n            placeholder=\\\"phone number\\\"\\r\\n            required\\r\\n            minlength=\\\"8\\\"\\r\\n          />\\r\\n          <mat-error *ngIf=\\\"phoneInput.invalid\\\"\\r\\n            >Please enter a 8 digit phone number</mat-error\\r\\n          >\\r\\n        </mat-form-field>\\r\\n      </p>\\r\\n      <p>\\r\\n        <mat-form-field appearance=\\\"fill\\\">\\r\\n          <mat-label>Select account type</mat-label>\\r\\n          <mat-select\\r\\n            name=\\\"accountType\\\"\\r\\n            matInput\\r\\n            ngModel\\r\\n            #accountInput=\\\"ngModel\\\"\\r\\n            required\\r\\n          >\\r\\n            <mat-option>None</mat-option>\\r\\n            <mat-option value=\\\"BRONZE\\\">BRONZE</mat-option>\\r\\n            <mat-option value=\\\"SILVER\\\">SILVER</mat-option>\\r\\n            <mat-option value=\\\"GOLD\\\">GOLD</mat-option>\\r\\n          </mat-select>\\r\\n          <mat-error *ngIf=\\\"accountInput.invalid\\\"\\r\\n            >Please enter chose account type</mat-error\\r\\n          >\\r\\n        </mat-form-field>\\r\\n      </p>\\r\\n      <p>\\r\\n        <mat-form-field>\\r\\n          <input\\r\\n            matInput\\r\\n            ngModel\\r\\n            #passwordInput=\\\"ngModel\\\"\\r\\n            type=\\\"password\\\"\\r\\n            name=\\\"password\\\"\\r\\n            minlength=\\\"4\\\"\\r\\n            placeholder=\\\"Password\\\"\\r\\n            required\\r\\n          />\\r\\n          <mat-error *ngIf=\\\"passwordInput.invalid\\\"\\r\\n            >Password must be at least 6 characters</mat-error\\r\\n          >\\r\\n        </mat-form-field>\\r\\n      </p>\\r\\n      <p>\\r\\n        <mat-form-field>\\r\\n          <input\\r\\n            matInput\\r\\n            ngModel\\r\\n            #verifypasswordInput=\\\"ngModel\\\"\\r\\n            type=\\\"password\\\"\\r\\n            name=\\\"verifypassword\\\"\\r\\n            minlength=\\\"4\\\"\\r\\n            placeholder=\\\"Verify Password\\\"\\r\\n            required\\r\\n          />\\r\\n          <mat-error\\r\\n            *ngIf=\\\"\\r\\n              verifypasswordInput.value != passwordInput.value &&\\r\\n              verifypasswordInput.dirty\\r\\n            \\\"\\r\\n            >Unmatching passwords</mat-error\\r\\n          >\\r\\n        </mat-form-field>\\r\\n      </p>\\r\\n      <div>\\r\\n        <button\\r\\n          [disabled]=\\\"signupForm.invalid\\\"\\r\\n          mat-raised-button\\r\\n          color=\\\"red\\\"\\r\\n          type=\\\"submit\\\"\\r\\n          *ngIf=\\\"!isLoading\\\"\\r\\n        >\\r\\n          Register\\r\\n        </button>\\r\\n        <mat-checkbox [checked]=\\\"true\\\"\\r\\n          >I agree to the Terms and Conditions</mat-checkbox\\r\\n        >\\r\\n      </div>\\r\\n    </form>\\r\\n  </mat-card-content>\\r\\n</mat-card>\\r\\n\"","\r\nimport { Component } from \"@angular/core\";\r\nimport { NgForm } from \"@angular/forms\";\r\nimport { AuthService } from \"../auth.service\";\r\n\r\n@Component({\r\n  templateUrl: \"./signup.component.html\",\r\n  styleUrls: [\"./signup.component.css\"],\r\n})\r\nexport class SignupComponent {\r\n  isLoading = false;\r\n  constructor(public authService: AuthService) {}\r\n  onSignup(form: NgForm) {\r\n    if (form.invalid) {\r\n      return;\r\n    }\r\n    this.isLoading = true;\r\n    this.authService.createUser(\r\n      form.value.firstName,\r\n      form.value.lastName,\r\n      form.value.email,\r\n      form.value.password,\r\n      form.value.phoneNumber,\r\n      form.value.accountType\r\n    );\r\n  }\r\n}\r\n","module.exports = \"\\r\\n.info {\\r\\n  display: block;\\r\\n  position: relative;\\r\\n  margin-left: 10px;\\r\\n  margin-top: 15px;\\r\\n  margin-bottom: 2px;\\r\\n  left: 233px;\\r\\n  bottom: 577px;\\r\\n  width: 90%;\\r\\n  height: 879px;\\r\\n  background-color: #fffffff5;\\r\\n}\\r\\n\\r\\n.avatar {\\r\\n  position: -webkit-sticky;\\r\\n  position: sticky;\\r\\n  right: 1022px;\\r\\n}\\r\\n\\r\\n.avatar-title {\\r\\n  position: relative;\\r\\n  left: 92px;\\r\\n  top: 6px;\\r\\n  margin-bottom: 3px;\\r\\n  font-size: 18px;\\r\\n  font-weight: lighter;\\r\\n  color: dimgray;\\r\\n}\\r\\n\\r\\n.contact-btn {\\r\\n  border-radius: 18px;\\r\\n  top: 6px;\\r\\n  right: 6px;\\r\\n}\\r\\n\\r\\n.flex {\\r\\n  display: inline-flex;\\r\\n  flex-direction: row;\\r\\n  position: relative;\\r\\n  margin-left: 14px;\\r\\n  margin-right: -8px;\\r\\n  margin-top: 0px;\\r\\n  margin-bottom: -71px;\\r\\n  left: 464px;\\r\\n  bottom: 61px;\\r\\n}\\r\\n\\r\\n.divider {\\r\\n  margin-right: 15px;\\r\\n  margin-left: 15px;\\r\\n  border-color: #daa5206e;\\r\\n  border-width: 2px !important;\\r\\n}\\r\\n\\r\\n.block-divider {\\r\\n  left: -37px !important;\\r\\n  width: 961px !important;\\r\\n  border-top-color: #daa5206e;\\r\\n}\\r\\n\\r\\n.grid-card {\\r\\n  max-width: 461px;\\r\\n  max-height: 249px;\\r\\n}\\r\\n\\r\\n.grid-card-header-image {\\r\\n  background-size: cover;\\r\\n}\\r\\n\\r\\n.icon {\\r\\n  font-size: 48px;\\r\\n}\\r\\n\\r\\n.current-balance {\\r\\n  font-size: 48px;\\r\\n  font-weight: 100;\\r\\n  color: goldenrod;\\r\\n  text-align: center;\\r\\n  margin: 0;\\r\\n}\\r\\n\\r\\n.current-balance-box {\\r\\n  bottom: 1%;\\r\\n  width: 352px;\\r\\n}\\r\\n\\r\\n#transfert {\\r\\n  bottom: 2%;\\r\\n  width: 352px;\\r\\n}\\r\\n\\r\\n.current-balance-btn {\\r\\n  position: relative;\\r\\n  margin-left: 0;\\r\\n  margin-right: 0;\\r\\n  left: 29px;\\r\\n}\\r\\n\\r\\nmat-card {\\r\\n  margin: 15px;\\r\\n  display: inline-block;\\r\\n  left: 3px;\\r\\n  bottom: 55px;\\r\\n  padding: 15px;\\r\\n}\\r\\n\\r\\n.list {\\r\\n  width: auto;\\r\\n  height: 239px;\\r\\n  left: 0px;\\r\\n  overflow: hidden visible;\\r\\n  cursor: pointer;\\r\\n}\\r\\n\\r\\n.list-exchange-calc {\\r\\n  width: -webkit-fit-content;\\r\\n  width: -moz-fit-content;\\r\\n  width: fit-content;\\r\\n  height: 300px;\\r\\n  left: 0px;\\r\\n  overflow: hidden visible;\\r\\n}\\r\\n\\r\\n.no-overflow {\\r\\n  overflow: hidden hidden;\\r\\n  cursor: default;\\r\\n}\\r\\n\\r\\ntable {\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n.transaction-box {\\r\\n  bottom: 37px;\\r\\n  width: -webkit-fit-content;\\r\\n  width: -moz-fit-content;\\r\\n  width: fit-content;\\r\\n}\\r\\n\\r\\n.exchange-box {\\r\\n  bottom: 37px;\\r\\n  width: 506px;\\r\\n}\\r\\n\\r\\n.transfer-box {\\r\\n  width: 355px;\\r\\n}\\r\\n\\r\\n.transfer-buttons {\\r\\n  bottom: 21px;\\r\\n  position: relative;\\r\\n}\\r\\n\\r\\ntr.transaction-detail-row {\\r\\n  height: 0;\\r\\n}\\r\\n\\r\\ntr.transaction-element-row:not(.transaction-expanded-row):hover {\\r\\n  background: rgba(156, 146, 0, 0.158);\\r\\n}\\r\\n\\r\\ntr.transaction-element-row:not(.transaction-expanded-row):active {\\r\\n  background: #efefef;\\r\\n}\\r\\n\\r\\n.transaction-element-row td {\\r\\n  border-bottom-width: 0;\\r\\n}\\r\\n\\r\\n.transaction-element-detail {\\r\\n  overflow: hidden;\\r\\n  display: flex;\\r\\n}\\r\\n\\r\\n.transaction-element-description {\\r\\n  padding: 16px;\\r\\n  padding-top: 0px;\\r\\n  padding-bottom: 18px;\\r\\n  opacity: 0.8;\\r\\n  width: 374px;\\r\\n}\\r\\n\\r\\n.elipsis {\\r\\n  white-space: nowrap;\\r\\n  overflow: hidden;\\r\\n  text-overflow: ellipsis;\\r\\n  display: block;\\r\\n  width: 116px;\\r\\n}\\r\\n\\r\\n.sticky-header {\\r\\n  z-index: 2 !important;\\r\\n}\\r\\n\\r\\n.header-row {\\r\\n  height: 41px;\\r\\n}\\r\\n\\r\\n.no-transactions {\\r\\n  width: 225px;\\r\\n  margin: 0px 0px 9px 0px;\\r\\n  top: 27px;\\r\\n  left: 135px;\\r\\n  position: relative;\\r\\n  overflow-y: hidden;\\r\\n}\\r\\n\\r\\n.no-transactions-message {\\r\\n  text-align: center;\\r\\n}\\r\\n\\r\\n.currency {\\r\\n  font-size: 23px;\\r\\n}\\r\\n\\r\\n.spinner {\\r\\n  left: 144px;\\r\\n  top: 63px;\\r\\n}\\r\\n\\r\\n.mat-progress-spinner circle,\\r\\n.mat-spinner circle {\\r\\n  stroke-width: 3%;\\r\\n  stroke: goldenrod !important;\\r\\n}\\r\\n\\r\\n.gear-transactions {\\r\\n  left: 178px;\\r\\n}\\r\\n\\r\\n.gear-currency-exchange {\\r\\n  left: 274px;\\r\\n}\\r\\n\\r\\n.gear-funds-transfer {\\r\\n  left: 74px;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZGFzaGJvYXJkLWNvbXBvbmVudC9kYXNoYm9hcmQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0E7RUFDRSxjQUFjO0VBQ2Qsa0JBQWtCO0VBQ2xCLGlCQUFpQjtFQUNqQixnQkFBZ0I7RUFDaEIsa0JBQWtCO0VBQ2xCLFdBQVc7RUFDWCxhQUFhO0VBQ2IsVUFBVTtFQUNWLGFBQWE7RUFDYiwyQkFBMkI7QUFDN0I7O0FBRUE7RUFDRSx3QkFBZ0I7RUFBaEIsZ0JBQWdCO0VBQ2hCLGFBQWE7QUFDZjs7QUFFQTtFQUNFLGtCQUFrQjtFQUNsQixVQUFVO0VBQ1YsUUFBUTtFQUNSLGtCQUFrQjtFQUNsQixlQUFlO0VBQ2Ysb0JBQW9CO0VBQ3BCLGNBQWM7QUFDaEI7O0FBRUE7RUFDRSxtQkFBbUI7RUFDbkIsUUFBUTtFQUNSLFVBQVU7QUFDWjs7QUFFQTtFQUNFLG9CQUFvQjtFQUNwQixtQkFBbUI7RUFDbkIsa0JBQWtCO0VBQ2xCLGlCQUFpQjtFQUNqQixrQkFBa0I7RUFDbEIsZUFBZTtFQUNmLG9CQUFvQjtFQUNwQixXQUFXO0VBQ1gsWUFBWTtBQUNkOztBQUVBO0VBQ0Usa0JBQWtCO0VBQ2xCLGlCQUFpQjtFQUNqQix1QkFBdUI7RUFDdkIsNEJBQTRCO0FBQzlCOztBQUVBO0VBQ0Usc0JBQXNCO0VBQ3RCLHVCQUF1QjtFQUN2QiwyQkFBMkI7QUFDN0I7O0FBRUE7RUFDRSxnQkFBZ0I7RUFDaEIsaUJBQWlCO0FBQ25COztBQUVBO0VBQ0Usc0JBQXNCO0FBQ3hCOztBQUVBO0VBQ0UsZUFBZTtBQUNqQjs7QUFFQTtFQUNFLGVBQWU7RUFDZixnQkFBZ0I7RUFDaEIsZ0JBQWdCO0VBQ2hCLGtCQUFrQjtFQUNsQixTQUFTO0FBQ1g7O0FBRUE7RUFDRSxVQUFVO0VBQ1YsWUFBWTtBQUNkOztBQUNBO0VBQ0UsVUFBVTtFQUNWLFlBQVk7QUFDZDs7QUFFQTtFQUNFLGtCQUFrQjtFQUNsQixjQUFjO0VBQ2QsZUFBZTtFQUNmLFVBQVU7QUFDWjs7QUFFQTtFQUNFLFlBQVk7RUFDWixxQkFBcUI7RUFDckIsU0FBUztFQUNULFlBQVk7RUFDWixhQUFhO0FBQ2Y7O0FBRUE7RUFDRSxXQUFXO0VBQ1gsYUFBYTtFQUNiLFNBQVM7RUFDVCx3QkFBd0I7RUFDeEIsZUFBZTtBQUNqQjs7QUFFQTtFQUNFLDBCQUFrQjtFQUFsQix1QkFBa0I7RUFBbEIsa0JBQWtCO0VBQ2xCLGFBQWE7RUFDYixTQUFTO0VBQ1Qsd0JBQXdCO0FBQzFCOztBQUVBO0VBQ0UsdUJBQXVCO0VBQ3ZCLGVBQWU7QUFDakI7O0FBRUE7RUFDRSxXQUFXO0FBQ2I7O0FBRUE7RUFDRSxZQUFZO0VBQ1osMEJBQWtCO0VBQWxCLHVCQUFrQjtFQUFsQixrQkFBa0I7QUFDcEI7O0FBRUE7RUFDRSxZQUFZO0VBQ1osWUFBWTtBQUNkOztBQUVBO0VBQ0UsWUFBWTtBQUNkOztBQUVBO0VBQ0UsWUFBWTtFQUNaLGtCQUFrQjtBQUNwQjs7QUFFQTtFQUNFLFNBQVM7QUFDWDs7QUFFQTtFQUNFLG9DQUFvQztBQUN0Qzs7QUFFQTtFQUNFLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLHNCQUFzQjtBQUN4Qjs7QUFFQTtFQUNFLGdCQUFnQjtFQUNoQixhQUFhO0FBQ2Y7O0FBRUE7RUFDRSxhQUFhO0VBQ2IsZ0JBQWdCO0VBQ2hCLG9CQUFvQjtFQUNwQixZQUFZO0VBQ1osWUFBWTtBQUNkOztBQUVBO0VBQ0UsbUJBQW1CO0VBQ25CLGdCQUFnQjtFQUNoQix1QkFBdUI7RUFDdkIsY0FBYztFQUNkLFlBQVk7QUFDZDs7QUFFQTtFQUNFLHFCQUFxQjtBQUN2Qjs7QUFFQTtFQUNFLFlBQVk7QUFDZDs7QUFFQTtFQUNFLFlBQVk7RUFDWix1QkFBdUI7RUFDdkIsU0FBUztFQUNULFdBQVc7RUFDWCxrQkFBa0I7RUFDbEIsa0JBQWtCO0FBQ3BCOztBQUVBO0VBQ0Usa0JBQWtCO0FBQ3BCOztBQUVBO0VBQ0UsZUFBZTtBQUNqQjs7QUFFQTtFQUNFLFdBQVc7RUFDWCxTQUFTO0FBQ1g7O0FBRUE7O0VBRUUsZ0JBQWdCO0VBQ2hCLDRCQUE0QjtBQUM5Qjs7QUFFQTtFQUNFLFdBQVc7QUFDYjs7QUFFQTtFQUNFLFdBQVc7QUFDYjs7QUFFQTtFQUNFLFVBQVU7QUFDWiIsImZpbGUiOiJzcmMvYXBwL2Rhc2hib2FyZC1jb21wb25lbnQvZGFzaGJvYXJkLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJcclxuLmluZm8ge1xyXG4gIGRpc3BsYXk6IGJsb2NrO1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICBtYXJnaW4tbGVmdDogMTBweDtcclxuICBtYXJnaW4tdG9wOiAxNXB4O1xyXG4gIG1hcmdpbi1ib3R0b206IDJweDtcclxuICBsZWZ0OiAyMzNweDtcclxuICBib3R0b206IDU3N3B4O1xyXG4gIHdpZHRoOiA5MCU7XHJcbiAgaGVpZ2h0OiA4NzlweDtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmZmZmZjU7XHJcbn1cclxuXHJcbi5hdmF0YXIge1xyXG4gIHBvc2l0aW9uOiBzdGlja3k7XHJcbiAgcmlnaHQ6IDEwMjJweDtcclxufVxyXG5cclxuLmF2YXRhci10aXRsZSB7XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIGxlZnQ6IDkycHg7XHJcbiAgdG9wOiA2cHg7XHJcbiAgbWFyZ2luLWJvdHRvbTogM3B4O1xyXG4gIGZvbnQtc2l6ZTogMThweDtcclxuICBmb250LXdlaWdodDogbGlnaHRlcjtcclxuICBjb2xvcjogZGltZ3JheTtcclxufVxyXG5cclxuLmNvbnRhY3QtYnRuIHtcclxuICBib3JkZXItcmFkaXVzOiAxOHB4O1xyXG4gIHRvcDogNnB4O1xyXG4gIHJpZ2h0OiA2cHg7XHJcbn1cclxuXHJcbi5mbGV4IHtcclxuICBkaXNwbGF5OiBpbmxpbmUtZmxleDtcclxuICBmbGV4LWRpcmVjdGlvbjogcm93O1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICBtYXJnaW4tbGVmdDogMTRweDtcclxuICBtYXJnaW4tcmlnaHQ6IC04cHg7XHJcbiAgbWFyZ2luLXRvcDogMHB4O1xyXG4gIG1hcmdpbi1ib3R0b206IC03MXB4O1xyXG4gIGxlZnQ6IDQ2NHB4O1xyXG4gIGJvdHRvbTogNjFweDtcclxufVxyXG5cclxuLmRpdmlkZXIge1xyXG4gIG1hcmdpbi1yaWdodDogMTVweDtcclxuICBtYXJnaW4tbGVmdDogMTVweDtcclxuICBib3JkZXItY29sb3I6ICNkYWE1MjA2ZTtcclxuICBib3JkZXItd2lkdGg6IDJweCAhaW1wb3J0YW50O1xyXG59XHJcblxyXG4uYmxvY2stZGl2aWRlciB7XHJcbiAgbGVmdDogLTM3cHggIWltcG9ydGFudDtcclxuICB3aWR0aDogOTYxcHggIWltcG9ydGFudDtcclxuICBib3JkZXItdG9wLWNvbG9yOiAjZGFhNTIwNmU7XHJcbn1cclxuXHJcbi5ncmlkLWNhcmQge1xyXG4gIG1heC13aWR0aDogNDYxcHg7XHJcbiAgbWF4LWhlaWdodDogMjQ5cHg7XHJcbn1cclxuXHJcbi5ncmlkLWNhcmQtaGVhZGVyLWltYWdlIHtcclxuICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xyXG59XHJcblxyXG4uaWNvbiB7XHJcbiAgZm9udC1zaXplOiA0OHB4O1xyXG59XHJcblxyXG4uY3VycmVudC1iYWxhbmNlIHtcclxuICBmb250LXNpemU6IDQ4cHg7XHJcbiAgZm9udC13ZWlnaHQ6IDEwMDtcclxuICBjb2xvcjogZ29sZGVucm9kO1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICBtYXJnaW46IDA7XHJcbn1cclxuXHJcbi5jdXJyZW50LWJhbGFuY2UtYm94IHtcclxuICBib3R0b206IDElO1xyXG4gIHdpZHRoOiAzNTJweDtcclxufVxyXG4jdHJhbnNmZXJ0IHtcclxuICBib3R0b206IDIlO1xyXG4gIHdpZHRoOiAzNTJweDtcclxufVxyXG5cclxuLmN1cnJlbnQtYmFsYW5jZS1idG4ge1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICBtYXJnaW4tbGVmdDogMDtcclxuICBtYXJnaW4tcmlnaHQ6IDA7XHJcbiAgbGVmdDogMjlweDtcclxufVxyXG5cclxubWF0LWNhcmQge1xyXG4gIG1hcmdpbjogMTVweDtcclxuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgbGVmdDogM3B4O1xyXG4gIGJvdHRvbTogNTVweDtcclxuICBwYWRkaW5nOiAxNXB4O1xyXG59XHJcblxyXG4ubGlzdCB7XHJcbiAgd2lkdGg6IGF1dG87XHJcbiAgaGVpZ2h0OiAyMzlweDtcclxuICBsZWZ0OiAwcHg7XHJcbiAgb3ZlcmZsb3c6IGhpZGRlbiB2aXNpYmxlO1xyXG4gIGN1cnNvcjogcG9pbnRlcjtcclxufVxyXG5cclxuLmxpc3QtZXhjaGFuZ2UtY2FsYyB7XHJcbiAgd2lkdGg6IGZpdC1jb250ZW50O1xyXG4gIGhlaWdodDogMzAwcHg7XHJcbiAgbGVmdDogMHB4O1xyXG4gIG92ZXJmbG93OiBoaWRkZW4gdmlzaWJsZTtcclxufVxyXG5cclxuLm5vLW92ZXJmbG93IHtcclxuICBvdmVyZmxvdzogaGlkZGVuIGhpZGRlbjtcclxuICBjdXJzb3I6IGRlZmF1bHQ7XHJcbn1cclxuXHJcbnRhYmxlIHtcclxuICB3aWR0aDogMTAwJTtcclxufVxyXG5cclxuLnRyYW5zYWN0aW9uLWJveCB7XHJcbiAgYm90dG9tOiAzN3B4O1xyXG4gIHdpZHRoOiBmaXQtY29udGVudDtcclxufVxyXG5cclxuLmV4Y2hhbmdlLWJveCB7XHJcbiAgYm90dG9tOiAzN3B4O1xyXG4gIHdpZHRoOiA1MDZweDtcclxufVxyXG5cclxuLnRyYW5zZmVyLWJveCB7XHJcbiAgd2lkdGg6IDM1NXB4O1xyXG59XHJcblxyXG4udHJhbnNmZXItYnV0dG9ucyB7XHJcbiAgYm90dG9tOiAyMXB4O1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxufVxyXG5cclxudHIudHJhbnNhY3Rpb24tZGV0YWlsLXJvdyB7XHJcbiAgaGVpZ2h0OiAwO1xyXG59XHJcblxyXG50ci50cmFuc2FjdGlvbi1lbGVtZW50LXJvdzpub3QoLnRyYW5zYWN0aW9uLWV4cGFuZGVkLXJvdyk6aG92ZXIge1xyXG4gIGJhY2tncm91bmQ6IHJnYmEoMTU2LCAxNDYsIDAsIDAuMTU4KTtcclxufVxyXG5cclxudHIudHJhbnNhY3Rpb24tZWxlbWVudC1yb3c6bm90KC50cmFuc2FjdGlvbi1leHBhbmRlZC1yb3cpOmFjdGl2ZSB7XHJcbiAgYmFja2dyb3VuZDogI2VmZWZlZjtcclxufVxyXG5cclxuLnRyYW5zYWN0aW9uLWVsZW1lbnQtcm93IHRkIHtcclxuICBib3JkZXItYm90dG9tLXdpZHRoOiAwO1xyXG59XHJcblxyXG4udHJhbnNhY3Rpb24tZWxlbWVudC1kZXRhaWwge1xyXG4gIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgZGlzcGxheTogZmxleDtcclxufVxyXG5cclxuLnRyYW5zYWN0aW9uLWVsZW1lbnQtZGVzY3JpcHRpb24ge1xyXG4gIHBhZGRpbmc6IDE2cHg7XHJcbiAgcGFkZGluZy10b3A6IDBweDtcclxuICBwYWRkaW5nLWJvdHRvbTogMThweDtcclxuICBvcGFjaXR5OiAwLjg7XHJcbiAgd2lkdGg6IDM3NHB4O1xyXG59XHJcblxyXG4uZWxpcHNpcyB7XHJcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcclxuICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xyXG4gIGRpc3BsYXk6IGJsb2NrO1xyXG4gIHdpZHRoOiAxMTZweDtcclxufVxyXG5cclxuLnN0aWNreS1oZWFkZXIge1xyXG4gIHotaW5kZXg6IDIgIWltcG9ydGFudDtcclxufVxyXG5cclxuLmhlYWRlci1yb3cge1xyXG4gIGhlaWdodDogNDFweDtcclxufVxyXG5cclxuLm5vLXRyYW5zYWN0aW9ucyB7XHJcbiAgd2lkdGg6IDIyNXB4O1xyXG4gIG1hcmdpbjogMHB4IDBweCA5cHggMHB4O1xyXG4gIHRvcDogMjdweDtcclxuICBsZWZ0OiAxMzVweDtcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgb3ZlcmZsb3cteTogaGlkZGVuO1xyXG59XHJcblxyXG4ubm8tdHJhbnNhY3Rpb25zLW1lc3NhZ2Uge1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxufVxyXG5cclxuLmN1cnJlbmN5IHtcclxuICBmb250LXNpemU6IDIzcHg7XHJcbn1cclxuXHJcbi5zcGlubmVyIHtcclxuICBsZWZ0OiAxNDRweDtcclxuICB0b3A6IDYzcHg7XHJcbn1cclxuXHJcbi5tYXQtcHJvZ3Jlc3Mtc3Bpbm5lciBjaXJjbGUsXHJcbi5tYXQtc3Bpbm5lciBjaXJjbGUge1xyXG4gIHN0cm9rZS13aWR0aDogMyU7XHJcbiAgc3Ryb2tlOiBnb2xkZW5yb2QgIWltcG9ydGFudDtcclxufVxyXG5cclxuLmdlYXItdHJhbnNhY3Rpb25zIHtcclxuICBsZWZ0OiAxNzhweDtcclxufVxyXG5cclxuLmdlYXItY3VycmVuY3ktZXhjaGFuZ2Uge1xyXG4gIGxlZnQ6IDI3NHB4O1xyXG59XHJcblxyXG4uZ2Vhci1mdW5kcy10cmFuc2ZlciB7XHJcbiAgbGVmdDogNzRweDtcclxufVxyXG4iXX0= */\"","module.exports = \"<mat-card layout=\\\"row\\\" class=\\\"info\\\">\\r\\n  <mat-card-title-group>\\r\\n    <mat-card-title class=\\\"avatar-title\\\"\\r\\n      >Hello, {{ user.firstName }}</mat-card-title\\r\\n    >\\r\\n\\r\\n    <img\\r\\n      mat-card-avatar\\r\\n      mat-card-sm-image\\r\\n      class=\\\"avatar\\\"\\r\\n      src=\\\"../../assets/images/bank.png\\\"\\r\\n      alt=\\\"Support avatar\\\"\\r\\n    />\\r\\n  </mat-card-title-group>\\r\\n  <mat-card-content class=\\\"mat-body-1 info-text flex\\\"\\r\\n    >You are signed in as: <br />\\r\\n    {{ user.firstName }} {{ user.lastName }}\\r\\n    <mat-divider\\r\\n      class=\\\"divider\\\"\\r\\n      vertical=\\\"true\\\"\\r\\n      vertical\\r\\n      style=\\\"height: 60px\\\"\\r\\n    ></mat-divider>\\r\\n  </mat-card-content>\\r\\n  <mat-card-content class=\\\"mat-body-1 info-text flex\\\"\\r\\n    >Your client number: <br />\\r\\n    {{ user.accountId }}\\r\\n    <mat-divider\\r\\n      class=\\\"divider\\\"\\r\\n      vertical=\\\"true\\\"\\r\\n      vertical\\r\\n      style=\\\"height: 60px\\\"\\r\\n    ></mat-divider>\\r\\n  </mat-card-content>\\r\\n\\r\\n  <mat-divider class=\\\"block-divider\\\"></mat-divider>\\r\\n  <br /><br /><br />\\r\\n\\r\\n  <mat-card class=\\\"transaction-box\\\">\\r\\n    <mat-card-header>\\r\\n      <div mat-card-avatar class=\\\"grid-card-header-image\\\">\\r\\n        <mat-icon class=\\\"icon\\\">swap_horiz</mat-icon>\\r\\n      </div>\\r\\n      <mat-card-title>Recent Transactions</mat-card-title>\\r\\n    </mat-card-header>\\r\\n\\r\\n    <div *ngIf=\\\"hasTransactions\\\" class=\\\"mat-elevation-z8 list\\\">\\r\\n      <table\\r\\n        mat-table\\r\\n        matSort\\r\\n        [dataSource]=\\\"dataSource\\\"\\r\\n        multiTemplateDataRows\\r\\n        class=\\\"mat-elevation-z8\\\"\\r\\n      >\\r\\n        <ng-container matColumnDef=\\\"description\\\">\\r\\n          <th\\r\\n            mat-header-cell\\r\\n            mat-sort-header\\r\\n            class=\\\"sticky-header\\\"\\r\\n            *matHeaderCellDef\\r\\n          >\\r\\n            Description\\r\\n          </th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n            <span class=\\\"elipsis\\\">{{ element.description }}</span>\\r\\n          </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"amount\\\">\\r\\n          <th\\r\\n            mat-header-cell\\r\\n            mat-sort-header\\r\\n            class=\\\"sticky-header\\\"\\r\\n            *matHeaderCellDef\\r\\n          >\\r\\n            Amount\\r\\n          </th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n            <span class=\\\"elipsis\\\">{{ element.value }}</span>\\r\\n          </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"senderAccountNumber\\\">\\r\\n          <th\\r\\n            mat-header-cell\\r\\n            mat-sort-header\\r\\n            class=\\\"sticky-header\\\"\\r\\n            *matHeaderCellDef\\r\\n          >\\r\\n            Account\\r\\n          </th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n            <span class=\\\"elipsis\\\">{{ user.accountId.substring(0, 4) }}</span>\\r\\n          </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"date\\\">\\r\\n          <th\\r\\n            mat-header-cell\\r\\n            mat-sort-header\\r\\n            class=\\\"sticky-header\\\"\\r\\n            *matHeaderCellDef\\r\\n          >\\r\\n            Date\\r\\n          </th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n            <span class=\\\"elipsis\\\">{{ element.nature }}</span>\\r\\n          </td>\\r\\n        </ng-container>\\r\\n        <ng-container matColumnDef=\\\"nature\\\">\\r\\n          <th\\r\\n            mat-header-cell\\r\\n            mat-sort-header\\r\\n            class=\\\"sticky-header\\\"\\r\\n            *matHeaderCellDef\\r\\n          >\\r\\n            Nature\\r\\n          </th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n            <span class=\\\"elipsis\\\">{{ element.nature }}</span>\\r\\n          </td>\\r\\n        </ng-container>\\r\\n        <ng-container matColumnDef=\\\"BalanceAfterTransaction\\\">\\r\\n          <th\\r\\n            mat-header-cell\\r\\n            mat-sort-header\\r\\n            class=\\\"sticky-headedar\\\"\\r\\n            *matHeaderCellDef\\r\\n          >\\r\\n            BalanceAfterTransaction\\r\\n          </th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n            <span class=\\\"elipsis\\\">{{ element.balanceAfterTransaction }}</span>\\r\\n          </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"expandedDetail\\\">\\r\\n          <td\\r\\n            mat-cell\\r\\n            *matCellDef=\\\"let element\\\"\\r\\n            [attr.colspan]=\\\"columnsToDisplayEng.length\\\"\\r\\n          >\\r\\n            <div\\r\\n              class=\\\"transaction-element-detail\\\"\\r\\n              [@detailExpand]=\\\"\\r\\n                element == expandedElement ? 'expanded' : 'collapsed'\\r\\n              \\\"\\r\\n            >\\r\\n              <div class=\\\"transaction-element-description\\\">\\r\\n                Description: {{ element.description }} <br />\\r\\n\\r\\n                <br />\\r\\n              </div>\\r\\n            </div>\\r\\n          </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <tr\\r\\n          class=\\\"header-row\\\"\\r\\n          mat-header-row\\r\\n          *matHeaderRowDef=\\\"columnsToDisplayEng; sticky: true\\\"\\r\\n        ></tr>\\r\\n        <tr\\r\\n          mat-row\\r\\n          *matRowDef=\\\"let element; columns: columnsToDisplayEng\\\"\\r\\n          class=\\\"transaction-element-row\\\"\\r\\n          [class.transaction-expanded-row]=\\\"expandedElement === element\\\"\\r\\n          (click)=\\\"\\r\\n            expandedElement = expandedElement === element ? null : element\\r\\n          \\\"\\r\\n        ></tr>\\r\\n        <tr\\r\\n          mat-row\\r\\n          *matRowDef=\\\"let row; columns: ['expandedDetail']\\\"\\r\\n          class=\\\"transaction-detail-row\\\"\\r\\n        ></tr>\\r\\n      </table>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"isLoading\\\" class=\\\"mat-elevation-z8 list\\\">\\r\\n      <mat-spinner class=\\\"spinner\\\"></mat-spinner>\\r\\n    </div>\\r\\n    <div\\r\\n      *ngIf=\\\"!hasTransactions && !isLoading\\\"\\r\\n      class=\\\"mat-elevation-z8 list no-overflow\\\"\\r\\n    >\\r\\n      <img\\r\\n        mat-card-image\\r\\n        class=\\\"no-transactions\\\"\\r\\n        src=\\\"http://localhost:3000/repository/images/no-transactions.jpg\\\"\\r\\n        alt=\\\"Ништа није пронађено.\\\"\\r\\n      />\\r\\n      <p class=\\\"no-transactions-message\\\">You have no transactions.</p>\\r\\n    </div>\\r\\n  </mat-card>\\r\\n\\r\\n  <mat-card class=\\\"current-balance-box\\\">\\r\\n    <mat-card-header>\\r\\n      <div mat-card-avatar class=\\\"grid-card-header-image\\\">\\r\\n        <mat-icon class=\\\"icon\\\">monetization_on</mat-icon>\\r\\n      </div>\\r\\n      <mat-card-title>Available balance</mat-card-title>\\r\\n      <mat-card-subtitle\\r\\n        >account number: {{ user.accountId.substring(0, 4) }}</mat-card-subtitle\\r\\n      >\\r\\n    </mat-card-header>\\r\\n    <mat-card-content>\\r\\n      <p class=\\\"current-balance\\\">\\r\\n        {{ user.balance }}<span class=\\\"currency\\\">,00 TND</span>\\r\\n      </p>\\r\\n    </mat-card-content>\\r\\n    <mat-card-actions class=\\\"current-balance-btn\\\">\\r\\n      <form #operationForm=\\\"ngForm\\\">\\r\\n        <p>\\r\\n          <mat-form-field>\\r\\n            <input\\r\\n              matInput\\r\\n              ngModel\\r\\n              #valueInput=\\\"ngModel\\\"\\r\\n              type=\\\"text\\\"\\r\\n              name=\\\"montant\\\"\\r\\n              placeholder=\\\"Value\\\"\\r\\n              required\\r\\n            />\\r\\n            <mat-error *ngIf=\\\"valueInput.invalid\\\"\\r\\n              >Please enter the value of the operation</mat-error\\r\\n            >\\r\\n          </mat-form-field>\\r\\n        </p>\\r\\n        <p>\\r\\n          <mat-form-field>\\r\\n            <input\\r\\n              matInput\\r\\n              ngModel\\r\\n              #descriptionInput=\\\"ngModel\\\"\\r\\n              type=\\\"text\\\"\\r\\n              name=\\\"description\\\"\\r\\n              placeholder=\\\"description\\\"\\r\\n              required\\r\\n            />\\r\\n            <mat-error *ngIf=\\\"valueInput.invalid\\\"\\r\\n              >Please enter the value of the description</mat-error\\r\\n            >\\r\\n          </mat-form-field>\\r\\n        </p>\\r\\n\\r\\n        <button (click)=\\\"onDeposit(operationForm)\\\" mat-button>Deposit</button>\\r\\n        <button (click)=\\\"onWithDraw(operationForm)\\\" mat-button>WithDraw</button>\\r\\n      </form>\\r\\n    </mat-card-actions>\\r\\n  </mat-card>\\r\\n\\r\\n  <mat-card class=\\\"current-balance-box\\\" id=\\\"transfert\\\">\\r\\n    <mat-card-header>\\r\\n      <div mat-card-avatar class=\\\"grid-card-header-image\\\">\\r\\n        <mat-icon class=\\\"icon\\\">monetization_on</mat-icon>\\r\\n      </div>\\r\\n      <mat-card-title>Transfert Balance</mat-card-title>\\r\\n    </mat-card-header>\\r\\n\\r\\n    <mat-card-actions class=\\\"current-balance-btn\\\">\\r\\n      <form #transferForm=\\\"ngForm\\\">\\r\\n        <p>\\r\\n          <mat-form-field>\\r\\n            <input\\r\\n              matInput\\r\\n              ngModel\\r\\n              #valueInput=\\\"ngModel\\\"\\r\\n              type=\\\"text\\\"\\r\\n              name=\\\"montant\\\"\\r\\n              placeholder=\\\"Value\\\"\\r\\n              required\\r\\n            />\\r\\n            <mat-error *ngIf=\\\"valueInput.invalid\\\">Please enter value</mat-error>\\r\\n          </mat-form-field>\\r\\n        </p>\\r\\n        <p>\\r\\n          <mat-form-field>\\r\\n            <input\\r\\n              matInput\\r\\n              ngModel\\r\\n              #descriptionInput=\\\"ngModel\\\"\\r\\n              type=\\\"text\\\"\\r\\n              name=\\\"description\\\"\\r\\n              placeholder=\\\"description\\\"\\r\\n              required\\r\\n            />\\r\\n            <mat-error *ngIf=\\\"valueInput.invalid\\\"\\r\\n              >Please enter description</mat-error\\r\\n            >\\r\\n          </mat-form-field>\\r\\n        </p>\\r\\n        <p>\\r\\n          <mat-form-field>\\r\\n            <input\\r\\n              matInput\\r\\n              ngModel\\r\\n              #senderInput=\\\"ngModel\\\"\\r\\n              type=\\\"text\\\"\\r\\n              name=\\\"recipient\\\"\\r\\n              placeholder=\\\"recipient\\\"\\r\\n              required\\r\\n            />\\r\\n            <mat-error *ngIf=\\\"valueInput.invalid\\\"\\r\\n              >Please enter the id of the receiver</mat-error\\r\\n            >\\r\\n          </mat-form-field>\\r\\n        </p>\\r\\n\\r\\n        <button (click)=\\\"onTransfert(transferForm)\\\" mat-button>Transfer</button>\\r\\n      </form>\\r\\n    </mat-card-actions>\\r\\n  </mat-card>\\r\\n</mat-card>\\r\\n\"","import { Component, OnInit, Injectable, OnDestroy } from \"@angular/core\";\r\nimport { Subscription } from \"rxjs\";\r\nimport { AuthService } from \"../auth/auth.service\";\r\nimport { DashService } from \"./dashboard.service\";\r\nimport {\r\n  animate,\r\n  state,\r\n  style,\r\n  transition,\r\n  trigger,\r\n} from \"@angular/animations\";\r\nimport { NgForm } from \"@angular/forms\";\r\n\r\n@Component({\r\n  selector: \"app-dashboard\",\r\n  templateUrl: \"./dashboard.component.html\",\r\n  styleUrls: [\"./dashboard.component.css\"],\r\n  animations: [\r\n    trigger(\"detailExpand\", [\r\n      state(\"collapsed\", style({ height: \"0px\", minHeight: \"0\" })),\r\n      state(\"expanded\", style({ height: \"*\" })),\r\n      transition(\r\n        \"expanded <=> collapsed\",\r\n        animate(\"225ms cubic-bezier(0.4, 0.0, 0.2, 1)\")\r\n      ),\r\n    ]),\r\n  ],\r\n})\r\n@Injectable()\r\nexport class DashboardComponent implements OnInit, OnDestroy {\r\n  // Here, we will store retrieved user data form server\r\n  user = {\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    balance: 0,\r\n    accountType: \"\",\r\n    accountId: \"\",\r\n    transactions: [],\r\n  };\r\n\r\n  //transactions table variables\r\n  dataSource = [];\r\n  columnsToDisplayEng = [\r\n    \"date\",\r\n    \"description\",\r\n    \"nature\",\r\n    \"amount\",\r\n    \"senderAccountNumber\",\r\n    \"BalanceAfterTransaction\",\r\n  ];\r\n  expandedElement: LastTransaction | null;\r\n\r\n  isLoading = false;\r\n  userIsAuthenticated = false;\r\n  hasTransactions = false; // if there are no transactions for logged user, set a flag for front-end\r\n\r\n  private authStatusSub: Subscription;\r\n  private userSub: Subscription;\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    public dashService: DashService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.isLoading = true;\r\n    this.dashService.getUserData();\r\n    this.userSub = this.dashService\r\n      .getUserDataListener()\r\n      .subscribe(\r\n        (userData: {\r\n          firstName: string;\r\n          lastName: string;\r\n          balance: number;\r\n          accountType: string;\r\n          accountId: string;\r\n          transactions: any[];\r\n        }) => {\r\n          this.isLoading = false;\r\n          this.user = userData;\r\n          this.dataSource = this.user.transactions;\r\n          if (this.dataSource.length > 0) {\r\n            this.hasTransactions = true;\r\n          }\r\n        }\r\n      );\r\n    this.userIsAuthenticated = this.authService.getIsAuth();\r\n    this.authStatusSub = this.authService\r\n      .getAuthStatusListener()\r\n      .subscribe((isAuthenticated) => {\r\n        this.userIsAuthenticated = isAuthenticated;\r\n      });\r\n  }\r\n\r\n  onDeposit(form: NgForm) {\r\n    if (form.invalid) {\r\n      return;\r\n    }\r\n    this.dashService.makeDeposit(form.value.montant, form.value.description);\r\n  }\r\n  onWithDraw(form: NgForm) {\r\n    if (form.invalid) {\r\n      return;\r\n    }\r\n    this.dashService.makeWithdraw(form.value.montant, form.value.description);\r\n  }\r\n  onTransfert(form: NgForm) {\r\n    if (form.invalid) {\r\n      return;\r\n    }\r\n    this.dashService.makeTransfer(\r\n      form.value.montant,\r\n      form.value.description,\r\n      form.value.recipient\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.userSub.unsubscribe();\r\n  }\r\n}\r\n\r\n/*\r\n * Interface for accessing transaction fields\r\n */\r\nexport interface LastTransaction {\r\n  date: string;\r\n  dateKnjizenja: string;\r\n  amount: number;\r\n  paymentMethod: string;\r\n  senderAccountNumber: number;\r\n  receiverAccountNumber: number;\r\n  description: string;\r\n}\r\n\r\nexport interface ExchangeCurr {\r\n  country: string;\r\n  currency: string;\r\n  selling: string;\r\n  buying: string;\r\n  average: string;\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { Router } from \"@angular/router\";\r\nimport { Subject } from \"rxjs\";\r\n\r\n@Injectable({ providedIn: \"root\" })\r\nexport class DashService {\r\n  private dashStatusListener = new Subject<{\r\n    firstName: string;\r\n    lastName: string;\r\n    balance: number;\r\n    accountType: string;\r\n    accountId: string;\r\n    transactions: any[];\r\n  }>(); // objekat klase koja odasilje podatke svim zaint. stranama\r\n\r\n  constructor(private http: HttpClient, private router: Router) {}\r\n  rootURL = \"/api\";\r\n  /*\r\n    Function to fetch all related user data from server\r\n    to show it on Dasboard (Home) page\r\n    */\r\n  getUserData() {\r\n    const userData = {\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      balance: 0,\r\n      accountType: \"\",\r\n      accountId: \"\",\r\n      transactions: [],\r\n    };\r\n    this.http\r\n      .get<{\r\n        firstName: string;\r\n        lastName: string;\r\n        balance: number;\r\n        accountId: string;\r\n        accountType: string;\r\n        transactions: [];\r\n      }>(this.rootURL + \"/v1/user/me\")\r\n      .subscribe((res) => {\r\n        userData.firstName = res[0].firstName;\r\n        userData.lastName = res[0].lastName;\r\n        userData.balance = res[0].accounts[0].balance;\r\n        userData.accountId = res[0].accounts[0].id;\r\n        userData.accountType = res[0].accounts[0].accountType;\r\n        userData.transactions = res[0].accounts[0].transactions;\r\n        this.dashStatusListener.next(userData);\r\n      });\r\n  }\r\n\r\n  makeDeposit(value: string, description: string) {\r\n    const depositData = {\r\n      value,\r\n      description,\r\n      issuer: \"61b5e0d7181ed542a43fb302\",\r\n    };\r\n\r\n    this.http\r\n      .post(this.rootURL + \"/v1/operation/deposit\", depositData)\r\n      .subscribe((response) => {\r\n        window.location.reload();\r\n        this.router.navigate([\"/\"]);\r\n        console.log(response);\r\n      });\r\n  }\r\n\r\n  makeWithdraw(value: string, description: string) {\r\n    const withdrawData = {\r\n      value,\r\n      description,\r\n    };\r\n\r\n    this.http\r\n      .post(this.rootURL + \"/v1/operation/withdraw\", withdrawData)\r\n      .subscribe((response) => {\r\n        window.location.reload();\r\n        this.router.navigate([\"/\"]);\r\n        console.log(response);\r\n      });\r\n  }\r\n  makeTransfer(value: string, description: string, recipient: string) {\r\n    const transferData = {\r\n      value,\r\n      description,\r\n      recipient,\r\n    };\r\n\r\n    this.http\r\n      .post(this.rootURL + \"/v1/operation/transfer\", transferData)\r\n      .subscribe((response) => {\r\n        window.location.reload();\r\n        this.router.navigate([\"/\"]);\r\n        console.log(response);\r\n      });\r\n  }\r\n\r\n  getUserDataListener() {\r\n    return this.dashStatusListener.asObservable();\r\n  }\r\n\r\n  /*\r\n    Function for converting data from ISO8601 shape (from MySQL db)\r\n    into dd-mm-yy format for frontend (transactions list table).\r\n     */\r\n  dateFromISO8601(isostr) {\r\n    var parts = isostr.match(/\\d+/g);\r\n    let date = new Date(\r\n      parts[0],\r\n      parts[1] - 1,\r\n      parts[2],\r\n      parts[3],\r\n      parts[4],\r\n      parts[5]\r\n    );\r\n\r\n    let partialYearStr = date.getFullYear().toString().substring(2, 4);\r\n\r\n    let day = date.getDate() + 1;\r\n    let dayStr = day.toString();\r\n\r\n    let month = date.getMonth() + 1;\r\n    let monthStr = month.toString();\r\n\r\n    if (day < 10) {\r\n      dayStr = \"0\" + day;\r\n    }\r\n\r\n    if (month < 10) {\r\n      monthStr = \"0\" + month;\r\n    }\r\n    return dayStr + \"-\" + monthStr + \"-\" + partialYearStr;\r\n  }\r\n}\r\n","module.exports = \"\\r\\nul {\\r\\n  list-style: none;\\r\\n  padding:0;\\r\\n  margin:0;\\r\\n}\\r\\n\\r\\na {\\r\\n  text-decoration: none;\\r\\n  color:white;\\r\\n}\\r\\n\\r\\n.spacer {\\r\\n  flex: 1 1 auto;\\r\\n}\\r\\n\\r\\nul {\\r\\n  display: flex;\\r\\n}\\r\\n\\r\\n.sticky {\\r\\n  position: -webkit-sticky;\\r\\n  position: sticky;\\r\\n  z-index: 10;\\r\\n}\\r\\n\\r\\nmat-toolbar {\\r\\n  background-color: rgba(62, 89, 105, 0.863);\\r\\n}\\r\\n\\r\\n.btn-selected {\\r\\n  color: rgba(71, 139, 170, 0.932);\\r\\n  background-color: rgba(212, 216, 218, 0.911);\\r\\n}\\r\\n\\r\\n.btn-menu {\\r\\n  color: white;\\r\\n}\\r\\n\\r\\n.logo {\\r\\n  cursor: pointer;\\r\\n  position: absolute;\\r\\n  top: 0;\\r\\n  width: 150px;\\r\\n}\\r\\n\\r\\n.menu-dots {\\r\\n  width: 40px;\\r\\n  color: rgba(255, 255, 255, 0.932);\\r\\n}\\r\\n\\r\\n.sticky {\\r\\n    --default-height: 64px;\\r\\n    z-index: 900;\\r\\n    top: 0;\\r\\n    height: var(--default-height);\\r\\n  }\\r\\n\\r\\n.sticky-side-menu {\\r\\n    --default-height: 70px;\\r\\n    top: 0;\\r\\n    height: var(--default-height);\\r\\n  }\\r\\n\\r\\n/*\\r\\n  Side menu\\r\\n  */\\r\\n\\r\\n.mat-drawer-container {\\r\\n    width: 233px;\\r\\n    height: 570px;\\r\\n}\\r\\n\\r\\n.menu-color {\\r\\n  color: goldenrod;\\r\\n  padding-right: 8px;\\r\\n}\\r\\n\\r\\n.mat-list-item {\\r\\n  color:maroon;\\r\\n}\\r\\n\\r\\n.mat-nav-list {\\r\\n  color:maroon;\\r\\n}\\r\\n\\r\\n.mat-list-base .mat-list-option .mat-list-item-content {\\r\\n  padding: 0px 24px;\\r\\n}\\r\\n\\r\\n.hr-bottom {\\r\\n  color:rgba(128, 0, 0, 0.623);\\r\\n}\\r\\n\\r\\n.menu-list-item-selected {\\r\\n  color: goldenrod;\\r\\n}\\r\\n\\r\\n.maroon {\\r\\n  color: maroon;\\r\\n}\\r\\n\\r\\n.user-header {\\r\\n  position: relative;\\r\\n  left: 5px;\\r\\n  top: 2px;\\r\\n  padding: 0px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvaGVhZGVyLXNpZGUtbWVudS9oZWFkZXItc2lkZS1tZW51LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBO0VBQ0UsZ0JBQWdCO0VBQ2hCLFNBQVM7RUFDVCxRQUFRO0FBQ1Y7O0FBRUE7RUFDRSxxQkFBcUI7RUFDckIsV0FBVztBQUNiOztBQUVBO0VBQ0UsY0FBYztBQUNoQjs7QUFFQTtFQUNFLGFBQWE7QUFDZjs7QUFFQTtFQUNFLHdCQUF3QjtFQUN4QixnQkFBZ0I7RUFDaEIsV0FBVztBQUNiOztBQUVBO0VBQ0UsMENBQTBDO0FBQzVDOztBQUVBO0VBQ0UsZ0NBQWdDO0VBQ2hDLDRDQUE0QztBQUM5Qzs7QUFFQTtFQUNFLFlBQVk7QUFDZDs7QUFFQTtFQUNFLGVBQWU7RUFDZixrQkFBa0I7RUFDbEIsTUFBTTtFQUNOLFlBQVk7QUFDZDs7QUFFQTtFQUNFLFdBQVc7RUFDWCxpQ0FBaUM7QUFDbkM7O0FBRUE7SUFDSSxzQkFBc0I7SUFDdEIsWUFBWTtJQUNaLE1BQU07SUFDTiw2QkFBNkI7RUFDL0I7O0FBQ0E7SUFDRSxzQkFBc0I7SUFDdEIsTUFBTTtJQUNOLDZCQUE2QjtFQUMvQjs7QUFFQTs7R0FFQzs7QUFFRDtJQUNFLFlBQVk7SUFDWixhQUFhO0FBQ2pCOztBQUVBO0VBQ0UsZ0JBQWdCO0VBQ2hCLGtCQUFrQjtBQUNwQjs7QUFFQTtFQUNFLFlBQVk7QUFDZDs7QUFFQTtFQUNFLFlBQVk7QUFDZDs7QUFFQTtFQUNFLGlCQUFpQjtBQUNuQjs7QUFFQTtFQUNFLDRCQUE0QjtBQUM5Qjs7QUFFQTtFQUNFLGdCQUFnQjtBQUNsQjs7QUFFQTtFQUNFLGFBQWE7QUFDZjs7QUFFQTtFQUNFLGtCQUFrQjtFQUNsQixTQUFTO0VBQ1QsUUFBUTtFQUNSLFlBQVk7QUFDZCIsImZpbGUiOiJzcmMvYXBwL2hlYWRlci1zaWRlLW1lbnUvaGVhZGVyLXNpZGUtbWVudS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiXHJcbnVsIHtcclxuICBsaXN0LXN0eWxlOiBub25lO1xyXG4gIHBhZGRpbmc6MDtcclxuICBtYXJnaW46MDtcclxufVxyXG5cclxuYSB7XHJcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xyXG4gIGNvbG9yOndoaXRlO1xyXG59XHJcblxyXG4uc3BhY2VyIHtcclxuICBmbGV4OiAxIDEgYXV0bztcclxufVxyXG5cclxudWwge1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbn1cclxuXHJcbi5zdGlja3kge1xyXG4gIHBvc2l0aW9uOiAtd2Via2l0LXN0aWNreTtcclxuICBwb3NpdGlvbjogc3RpY2t5O1xyXG4gIHotaW5kZXg6IDEwO1xyXG59XHJcblxyXG5tYXQtdG9vbGJhciB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSg2MiwgODksIDEwNSwgMC44NjMpO1xyXG59XHJcblxyXG4uYnRuLXNlbGVjdGVkIHtcclxuICBjb2xvcjogcmdiYSg3MSwgMTM5LCAxNzAsIDAuOTMyKTtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDIxMiwgMjE2LCAyMTgsIDAuOTExKTtcclxufVxyXG5cclxuLmJ0bi1tZW51IHtcclxuICBjb2xvcjogd2hpdGU7XHJcbn1cclxuXHJcbi5sb2dvIHtcclxuICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIHRvcDogMDtcclxuICB3aWR0aDogMTUwcHg7XHJcbn1cclxuXHJcbi5tZW51LWRvdHMge1xyXG4gIHdpZHRoOiA0MHB4O1xyXG4gIGNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuOTMyKTtcclxufVxyXG5cclxuLnN0aWNreSB7XHJcbiAgICAtLWRlZmF1bHQtaGVpZ2h0OiA2NHB4O1xyXG4gICAgei1pbmRleDogOTAwO1xyXG4gICAgdG9wOiAwO1xyXG4gICAgaGVpZ2h0OiB2YXIoLS1kZWZhdWx0LWhlaWdodCk7XHJcbiAgfVxyXG4gIC5zdGlja3ktc2lkZS1tZW51IHtcclxuICAgIC0tZGVmYXVsdC1oZWlnaHQ6IDcwcHg7XHJcbiAgICB0b3A6IDA7XHJcbiAgICBoZWlnaHQ6IHZhcigtLWRlZmF1bHQtaGVpZ2h0KTtcclxuICB9XHJcblxyXG4gIC8qXHJcbiAgU2lkZSBtZW51XHJcbiAgKi9cclxuICBcclxuICAubWF0LWRyYXdlci1jb250YWluZXIge1xyXG4gICAgd2lkdGg6IDIzM3B4O1xyXG4gICAgaGVpZ2h0OiA1NzBweDtcclxufVxyXG5cclxuLm1lbnUtY29sb3Ige1xyXG4gIGNvbG9yOiBnb2xkZW5yb2Q7XHJcbiAgcGFkZGluZy1yaWdodDogOHB4O1xyXG59XHJcblxyXG4ubWF0LWxpc3QtaXRlbSB7XHJcbiAgY29sb3I6bWFyb29uO1xyXG59XHJcblxyXG4ubWF0LW5hdi1saXN0IHtcclxuICBjb2xvcjptYXJvb247XHJcbn1cclxuXHJcbi5tYXQtbGlzdC1iYXNlIC5tYXQtbGlzdC1vcHRpb24gLm1hdC1saXN0LWl0ZW0tY29udGVudCB7XHJcbiAgcGFkZGluZzogMHB4IDI0cHg7XHJcbn1cclxuXHJcbi5oci1ib3R0b20ge1xyXG4gIGNvbG9yOnJnYmEoMTI4LCAwLCAwLCAwLjYyMyk7XHJcbn1cclxuXHJcbi5tZW51LWxpc3QtaXRlbS1zZWxlY3RlZCB7XHJcbiAgY29sb3I6IGdvbGRlbnJvZDtcclxufVxyXG5cclxuLm1hcm9vbiB7XHJcbiAgY29sb3I6IG1hcm9vbjtcclxufVxyXG5cclxuLnVzZXItaGVhZGVyIHtcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgbGVmdDogNXB4O1xyXG4gIHRvcDogMnB4O1xyXG4gIHBhZGRpbmc6IDBweDtcclxufSJdfQ== */\"","module.exports = \"<mat-toolbar class=\\\"sticky\\\">\\r\\n  <span>\\r\\n    <img\\r\\n      class=\\\"logo\\\"\\r\\n      src=\\\"../../assets/images/logo-white.png\\\"\\r\\n      alt=\\\"Voguel Banking\\\"\\r\\n      routerLink=\\\"/\\\"\\r\\n    />\\r\\n  </span>\\r\\n  <span class=\\\"spacer\\\"></span>\\r\\n  <ul>\\r\\n    <li>\\r\\n      <a\\r\\n        mat-button\\r\\n        routerLink=\\\"/login\\\"\\r\\n        *ngIf=\\\"!userIsAuthenticated\\\"\\r\\n        routerLinkActive=\\\"btn-selected\\\"\\r\\n        >Log in</a\\r\\n      >\\r\\n    </li>\\r\\n    <li>\\r\\n      <a\\r\\n        mat-button\\r\\n        routerLink=\\\"/signup\\\"\\r\\n        *ngIf=\\\"!userIsAuthenticated\\\"\\r\\n        routerLinkActive=\\\"btn-selected\\\"\\r\\n        >Sign up</a\\r\\n      >\\r\\n    </li>\\r\\n    <li>\\r\\n      <button\\r\\n        mat-button\\r\\n        class=\\\"btn-menu user-header\\\"\\r\\n        *ngIf=\\\"userIsAuthenticated\\\"\\r\\n      >\\r\\n        {{ user.name + \\\" \\\" + user.surname }}\\r\\n      </button>\\r\\n    </li>\\r\\n\\r\\n    <li>\\r\\n      <button mat-icon-button (click)=\\\"onLogout()\\\" *ngIf=\\\"userIsAuthenticated\\\">\\r\\n        <mat-icon class=\\\"menu-dots\\\">logout</mat-icon>\\r\\n      </button>\\r\\n    </li>\\r\\n  </ul>\\r\\n</mat-toolbar>\\r\\n\\r\\n<!--Left side menu-->\\r\\n<mat-sidenav-container class=\\\"sticky-side-menu\\\" *ngIf=\\\"userIsAuthenticated\\\">\\r\\n  <mat-sidenav-content class=\\\"mat-drawer-container\\\">\\r\\n    <mat-nav-list>\\r\\n      <a\\r\\n        mat-list-item\\r\\n        routerLink=\\\"/\\\"\\r\\n        routerLinkActive=\\\"menu-list-item-selected\\\"\\r\\n      >\\r\\n        <mat-icon class=\\\"menu-color\\\">dashboard</mat-icon> Dashboard\\r\\n      </a>\\r\\n      <hr color=\\\"maroon\\\" />\\r\\n      <a mat-list-item>\\r\\n        <mat-icon class=\\\"menu-color\\\">account_balance_wallet</mat-icon>Accounts\\r\\n      </a>\\r\\n\\r\\n      <hr class=\\\"hr-bottom\\\" />\\r\\n    </mat-nav-list>\\r\\n  </mat-sidenav-content>\\r\\n</mat-sidenav-container>\\r\\n\"","\r\n\r\nimport { Component, OnInit, OnDestroy } from \"@angular/core\";\r\nimport { AuthService } from \"../auth/auth.service\";\r\nimport { Subscription } from \"rxjs\";\r\nimport { DashService } from \"../dashboard-component/dashboard.service\";\r\n\r\n@Component({\r\n  selector: \"app-header\",\r\n  templateUrl: \"./header-side-menu.component.html\",\r\n  styleUrls: [\"./header-side-menu.component.css\"],\r\n})\r\nexport class HeaderSideMenuComponent implements OnInit, OnDestroy {\r\n  isLoading = false;\r\n  userIsAuthenticated = false;\r\n  private authStatusSub: Subscription;\r\n  private userSub: Subscription; // subscriber to cath asynchronous response from dashboard.service.ts\r\n  user = {\r\n    name: \"\",\r\n    surname: \"\",\r\n  };\r\n\r\n  /**\r\n   * Here we inject two services:\r\n   * 1. authService - to check if user is authenticated\r\n   * 2. dashService - If an user is authenticated, we load its full name from dashService\r\n   *\r\n   */\r\n  constructor(\r\n    private authService: AuthService,\r\n    public dashService: DashService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.isLoading = true;\r\n    const userId = this.authService.getUserId();\r\n    this.dashService.getUserData();\r\n    this.userSub = this.dashService\r\n      .getUserDataListener()\r\n      .subscribe((userData: { firstName: string; lastName: string }) => {\r\n        this.isLoading = false;\r\n      });\r\n    this.userIsAuthenticated = this.authService.getIsAuth();\r\n    this.authStatusSub = this.authService\r\n      .getAuthStatusListener()\r\n      .subscribe((isAuthenticated) => {\r\n        this.userIsAuthenticated = isAuthenticated;\r\n      });\r\n  }\r\n  ngOnDestroy() {\r\n    this.authStatusSub.unsubscribe();\r\n    this.userSub.unsubscribe();\r\n  }\r\n\r\n  onLogout() {\r\n    this.authService.logout();\r\n  }\r\n}\r\n","module.exports = \"\\r\\nmat-form-field {\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\nbutton {\\r\\n margin-right: 2mm;\\r\\n margin-top: 1mm;\\r\\n}\\r\\n\\r\\n.mat-raised-button.mat-red {\\r\\n  background-color: rgba(197, 59, 59, 0.863);\\r\\n  color: #ffffff;\\r\\n  margin-top: -12px;\\r\\n  margin-bottom: 5px;\\r\\n}\\r\\n\\r\\n.button {\\r\\n  display: flex;\\r\\n  justify-content: flex-end;\\r\\n}\\r\\n\\r\\nmat-spinner {\\r\\n  margin: auto;\\r\\n}\\r\\n\\r\\n:host {\\r\\n  display: flex;\\r\\n  position: relative;\\r\\n  left: 133px;\\r\\n  bottom: 513px;\\r\\n  justify-content: center;\\r\\n  margin: 15px 4px;\\r\\n}\\r\\n\\r\\n.mat-form-field {\\r\\n  width: 100%;\\r\\n  min-width: 300px;\\r\\n}\\r\\n\\r\\nmat-card {\\r\\n  position: relative;\\r\\n  display: block;\\r\\n  background-color: #fffffff5;\\r\\n  bottom: 64px;\\r\\n  left: 76px;\\r\\n  margin-right: 51px;\\r\\n  margin-left:30px;\\r\\n  width: -webkit-fill-available;\\r\\n}\\r\\n\\r\\nmat-card-title,\\r\\nmat-card-content {\\r\\n  display: flex;\\r\\n  justify-content: center;\\r\\n}\\r\\n\\r\\nmat-card-title {\\r\\n  font-weight: 400;\\r\\n  font-size: 22px;\\r\\n}\\r\\n\\r\\n.logo-login {\\r\\n  position: relative;\\r\\n  left: 85px;\\r\\n}\\r\\n\\r\\n.logo-name {\\r\\n  color: rgba(182, 182, 182, 0.925);\\r\\n}\\r\\n\\r\\nul {\\r\\n  list-style: none; \\r\\n  padding:0;\\r\\n  margin:0;\\r\\n}\\r\\n\\r\\np {\\r\\n  text-align: justify;\\r\\n  text-justify: inter-word;\\r\\n}\\r\\n\\r\\nvideo {\\r\\n  display: block;\\r\\n  margin-left: auto;\\r\\n  margin-right: auto;\\r\\n}\\r\\n\\r\\n.box-video {\\r\\n  display: -webkit-inline-box;\\r\\n  position: relative;\\r\\n  flex-direction: column;\\r\\n  margin: 16px;\\r\\n  width: 39%;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvaGVscC9oZWxwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBO0VBQ0UsV0FBVztBQUNiOztBQUVBO0NBQ0MsaUJBQWlCO0NBQ2pCLGVBQWU7QUFDaEI7O0FBRUE7RUFDRSwwQ0FBMEM7RUFDMUMsY0FBYztFQUNkLGlCQUFpQjtFQUNqQixrQkFBa0I7QUFDcEI7O0FBRUE7RUFDRSxhQUFhO0VBQ2IseUJBQXlCO0FBQzNCOztBQUVBO0VBQ0UsWUFBWTtBQUNkOztBQUVBO0VBQ0UsYUFBYTtFQUNiLGtCQUFrQjtFQUNsQixXQUFXO0VBQ1gsYUFBYTtFQUNiLHVCQUF1QjtFQUN2QixnQkFBZ0I7QUFDbEI7O0FBRUE7RUFDRSxXQUFXO0VBQ1gsZ0JBQWdCO0FBQ2xCOztBQUVBO0VBQ0Usa0JBQWtCO0VBQ2xCLGNBQWM7RUFDZCwyQkFBMkI7RUFDM0IsWUFBWTtFQUNaLFVBQVU7RUFDVixrQkFBa0I7RUFDbEIsZ0JBQWdCO0VBQ2hCLDZCQUE2QjtBQUMvQjs7QUFFQTs7RUFFRSxhQUFhO0VBQ2IsdUJBQXVCO0FBQ3pCOztBQUVBO0VBQ0UsZ0JBQWdCO0VBQ2hCLGVBQWU7QUFDakI7O0FBRUE7RUFDRSxrQkFBa0I7RUFDbEIsVUFBVTtBQUNaOztBQUVBO0VBQ0UsaUNBQWlDO0FBQ25DOztBQUVBO0VBQ0UsZ0JBQWdCO0VBQ2hCLFNBQVM7RUFDVCxRQUFRO0FBQ1Y7O0FBRUE7RUFDRSxtQkFBbUI7RUFDbkIsd0JBQXdCO0FBQzFCOztBQUVBO0VBQ0UsY0FBYztFQUNkLGlCQUFpQjtFQUNqQixrQkFBa0I7QUFDcEI7O0FBRUE7RUFDRSwyQkFBMkI7RUFDM0Isa0JBQWtCO0VBQ2xCLHNCQUFzQjtFQUN0QixZQUFZO0VBQ1osVUFBVTtBQUNaIiwiZmlsZSI6InNyYy9hcHAvaGVscC9oZWxwLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJcclxubWF0LWZvcm0tZmllbGQge1xyXG4gIHdpZHRoOiAxMDAlO1xyXG59XHJcblxyXG5idXR0b24ge1xyXG4gbWFyZ2luLXJpZ2h0OiAybW07XHJcbiBtYXJnaW4tdG9wOiAxbW07XHJcbn1cclxuXHJcbi5tYXQtcmFpc2VkLWJ1dHRvbi5tYXQtcmVkIHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDE5NywgNTksIDU5LCAwLjg2Myk7XHJcbiAgY29sb3I6ICNmZmZmZmY7XHJcbiAgbWFyZ2luLXRvcDogLTEycHg7XHJcbiAgbWFyZ2luLWJvdHRvbTogNXB4O1xyXG59XHJcblxyXG4uYnV0dG9uIHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7XHJcbn1cclxuXHJcbm1hdC1zcGlubmVyIHtcclxuICBtYXJnaW46IGF1dG87XHJcbn1cclxuXHJcbjpob3N0IHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICBsZWZ0OiAxMzNweDtcclxuICBib3R0b206IDUxM3B4O1xyXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gIG1hcmdpbjogMTVweCA0cHg7XHJcbn1cclxuXHJcbi5tYXQtZm9ybS1maWVsZCB7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgbWluLXdpZHRoOiAzMDBweDtcclxufVxyXG5cclxubWF0LWNhcmQge1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICBkaXNwbGF5OiBibG9jaztcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmZmZmZjU7XHJcbiAgYm90dG9tOiA2NHB4O1xyXG4gIGxlZnQ6IDc2cHg7XHJcbiAgbWFyZ2luLXJpZ2h0OiA1MXB4O1xyXG4gIG1hcmdpbi1sZWZ0OjMwcHg7XHJcbiAgd2lkdGg6IC13ZWJraXQtZmlsbC1hdmFpbGFibGU7XHJcbn1cclxuXHJcbm1hdC1jYXJkLXRpdGxlLFxyXG5tYXQtY2FyZC1jb250ZW50IHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG59XHJcblxyXG5tYXQtY2FyZC10aXRsZSB7XHJcbiAgZm9udC13ZWlnaHQ6IDQwMDtcclxuICBmb250LXNpemU6IDIycHg7XHJcbn1cclxuXHJcbi5sb2dvLWxvZ2luIHtcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgbGVmdDogODVweDtcclxufVxyXG5cclxuLmxvZ28tbmFtZSB7XHJcbiAgY29sb3I6IHJnYmEoMTgyLCAxODIsIDE4MiwgMC45MjUpO1xyXG59XHJcblxyXG51bCB7XHJcbiAgbGlzdC1zdHlsZTogbm9uZTsgXHJcbiAgcGFkZGluZzowO1xyXG4gIG1hcmdpbjowO1xyXG59XHJcblxyXG5wIHtcclxuICB0ZXh0LWFsaWduOiBqdXN0aWZ5O1xyXG4gIHRleHQtanVzdGlmeTogaW50ZXItd29yZDtcclxufVxyXG5cclxudmlkZW8ge1xyXG4gIGRpc3BsYXk6IGJsb2NrO1xyXG4gIG1hcmdpbi1sZWZ0OiBhdXRvO1xyXG4gIG1hcmdpbi1yaWdodDogYXV0bztcclxufVxyXG5cclxuLmJveC12aWRlbyB7XHJcbiAgZGlzcGxheTogLXdlYmtpdC1pbmxpbmUtYm94O1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gIG1hcmdpbjogMTZweDtcclxuICB3aWR0aDogMzklO1xyXG59XHJcbiJdfQ== */\"","module.exports = \"\\r\\n  <mat-card layout='row'>\\r\\n    <mat-card-title><h3>Help section</h3></mat-card-title>\\r\\n    <hr>\\r\\n    <mat-card-content>\\r\\n      <ul>\\r\\n      <li>\\r\\n          <h3>Video tutorial</h3>\\r\\n          <p>\\r\\n            <video width=\\\"400\\\" controls poster=\\\"http://localhost:3000/repository/images/ebankhelp3.jpg\\\" controlsList=\\\"nodownload\\\">\\r\\n              <source src=\\\"http://localhost:3000/repository/videos/ebankhelp2.mp4\\\"  type=\\\"video/mp4\\\">\\r\\n              Your web browser does not support video.\\r\\n            </video>\\r\\n          </p>\\r\\n        </li>\\r\\n      <li>\\r\\n          <h3>Forgotten username or password</h3>\\r\\n        <p justify=\\\"even\\\">\\r\\n          Ukoliko ste zaboravili korisničko ime ili lozinku, ili zaključali vaš nalog unosom pogrešne\\r\\n          kombinacije korisničkog imena i lozinke, potrebno je da ponovo napravite nalog.</p>\\r\\n          <p>Zatim je potrebno izabrati opciju Napravite novi nalog a zatim popunjavate tražene podatke kao prilikom Kreiranja novog korisničkog naloga.</p>\\r\\n          <p>1. Meni Vam omogućuje da na lak način pristupite željenim uslugama. Odabirom opcije iz...\\r\\n         </li>\\r\\n      </ul>\\r\\n      <mat-spinner *ngIf = \\\"isLoading\\\"></mat-spinner>\\r\\n    </mat-card-content>\\r\\n  </mat-card>\\r\\n\"","\r\nimport {Component} from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\n\r\n@Component({\r\n  templateUrl: './help.component.html',\r\n  styleUrls: ['./help.component.css']\r\n})\r\n\r\nexport class HelpComponent {\r\n  isLoading = false;\r\n}\r\n","\r\nimport { AbstractControl } from '@angular/forms';\r\nimport { Observable, Observer, of } from 'rxjs';\r\n\r\nexport const mimeType = (\r\n  control: AbstractControl\r\n): Promise<{ [key: string]: any }> | Observable<{ [key: string]: any }> => {\r\n  if (typeof(control.value) === 'string') { // ako je slika blob vrati null\r\n    return of(null);\r\n  }\r\n  const file = control.value as File;\r\n  const fileReader = new FileReader();\r\n  const frObs = Observable.create(\r\n    (observer: Observer<{ [key: string]: any }>) => {\r\n      fileReader.addEventListener('loadend', () => {\r\n        const arr = new Uint8Array(fileReader.result as ArrayBuffer).subarray(0, 4);\r\n        let header = '';\r\n        let isValid = false;\r\n        // tslint:disable-next-line: prefer-for-of\r\n        for (let i = 0; i < arr.length; i++) {\r\n          header += arr[i].toString(16);\r\n        }\r\n        switch (header) {\r\n          case '89504e47':\r\n            isValid = true;\r\n            break;\r\n          case 'ffd8ffe0':\r\n          case 'ffd8ffe1':\r\n          case 'ffd8ffe2':\r\n          case 'ffd8ffe3':\r\n          case 'ffd8ffe8':\r\n            isValid = true;\r\n            break;\r\n          default:\r\n            isValid = false;\r\n            break;\r\n        }\r\n        if (isValid) {\r\n          observer.next(null);\r\n        } else {\r\n          observer.next({ invalidMimeType: true });\r\n        }\r\n        observer.complete();\r\n      });\r\n      fileReader.readAsArrayBuffer(file);\r\n    }\r\n  );\r\n  return frObs;\r\n};\r\n","module.exports = \"\\r\\nmat-form-field, textarea\\r\\n{\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\nbutton{\\r\\n margin-right: 2mm;\\r\\n margin-top: 1mm;\\r\\n}\\r\\n\\r\\nmat-spinner {\\r\\n  margin: auto;\\r\\n}\\r\\n\\r\\n/*\\r\\n* Special way of defining CSS element to be aplied only to 'file' type of input\\r\\n*/\\r\\n\\r\\ninput[type=\\\"file\\\"]{\\r\\n  visibility: hidden;\\r\\n}\\r\\n\\r\\n.image-preview {\\r\\n  height: 5rem;\\r\\n  margin: 1rem 0;\\r\\n}\\r\\n\\r\\n.image-preview img {\\r\\n  height:100%;\\r\\n}\\r\\n\\r\\n.mat-raised-button.mat-red {\\r\\n  background-color: rgba(197, 59, 59, 0.863);\\r\\n  color: #ffffff;\\r\\n}\\r\\n\\r\\n.align {\\r\\n  position: relative;\\r\\n  left: 240px;\\r\\n  bottom: 561px; \\r\\n  width: 736px;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcG9zdHMvcG9zdC1jcmVhdGUvcG9zdC1jcmVhdGUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0E7O0VBRUUsV0FBVztBQUNiOztBQUVBO0NBQ0MsaUJBQWlCO0NBQ2pCLGVBQWU7QUFDaEI7O0FBRUE7RUFDRSxZQUFZO0FBQ2Q7O0FBRUE7O0NBRUM7O0FBQ0Q7RUFDRSxrQkFBa0I7QUFDcEI7O0FBRUE7RUFDRSxZQUFZO0VBQ1osY0FBYztBQUNoQjs7QUFFQTtFQUNFLFdBQVc7QUFDYjs7QUFFQTtFQUNFLDBDQUEwQztFQUMxQyxjQUFjO0FBQ2hCOztBQUVBO0VBQ0Usa0JBQWtCO0VBQ2xCLFdBQVc7RUFDWCxhQUFhO0VBQ2IsWUFBWTtBQUNkIiwiZmlsZSI6InNyYy9hcHAvcG9zdHMvcG9zdC1jcmVhdGUvcG9zdC1jcmVhdGUuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIlxyXG5tYXQtZm9ybS1maWVsZCwgdGV4dGFyZWFcclxue1xyXG4gIHdpZHRoOiAxMDAlO1xyXG59XHJcblxyXG5idXR0b257XHJcbiBtYXJnaW4tcmlnaHQ6IDJtbTtcclxuIG1hcmdpbi10b3A6IDFtbTtcclxufVxyXG5cclxubWF0LXNwaW5uZXIge1xyXG4gIG1hcmdpbjogYXV0bztcclxufVxyXG5cclxuLypcclxuKiBTcGVjaWFsIHdheSBvZiBkZWZpbmluZyBDU1MgZWxlbWVudCB0byBiZSBhcGxpZWQgb25seSB0byAnZmlsZScgdHlwZSBvZiBpbnB1dFxyXG4qL1xyXG5pbnB1dFt0eXBlPVwiZmlsZVwiXXtcclxuICB2aXNpYmlsaXR5OiBoaWRkZW47XHJcbn1cclxuXHJcbi5pbWFnZS1wcmV2aWV3IHtcclxuICBoZWlnaHQ6IDVyZW07XHJcbiAgbWFyZ2luOiAxcmVtIDA7XHJcbn1cclxuXHJcbi5pbWFnZS1wcmV2aWV3IGltZyB7XHJcbiAgaGVpZ2h0OjEwMCU7XHJcbn1cclxuXHJcbi5tYXQtcmFpc2VkLWJ1dHRvbi5tYXQtcmVkIHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDE5NywgNTksIDU5LCAwLjg2Myk7XHJcbiAgY29sb3I6ICNmZmZmZmY7XHJcbn1cclxuXHJcbi5hbGlnbiB7XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIGxlZnQ6IDI0MHB4O1xyXG4gIGJvdHRvbTogNTYxcHg7IFxyXG4gIHdpZHRoOiA3MzZweDtcclxufVxyXG4iXX0= */\"","module.exports = \"\\r\\n<mat-card class=\\\"align\\\">\\r\\n  <mat-spinner class=\\\"color\\\" *ngIf=\\\"isLoading\\\"></mat-spinner>\\r\\n  <form [formGroup]=\\\"form\\\" (submit)=\\\"onSavePost()\\\" *ngIf=\\\"!isLoading\\\">\\r\\n    <mat-form-field>\\r\\n      <input matInput type=\\\"text\\\" formControlName=\\\"title\\\" placeholder=\\\"Payment title\\\">\\r\\n      <mat-error *ngIf=\\\"form.get('title').invalid\\\">{{error.title}}</mat-error>\\r\\n    </mat-form-field>\\r\\n    <div>\\r\\n      <button mat-stroked-button type=\\\"button\\\" (click)=\\\"filePicker.click()\\\">Choose picture</button>\\r\\n      <input type=\\\"file\\\" #filePicker (change)=\\\"onImagePicked($event)\\\">\\r\\n    </div>\\r\\n    <div class=\\\"image-preview\\\" *ngIf=\\\"imagePreview!=='' && imagePreview && form.get('image').valid\\\">\\r\\n      <img [src]=\\\"imagePreview\\\" [alt]=\\\"form.value.title\\\"></div>\\r\\n    <mat-form-field>\\r\\n      <textarea matInput rows=\\\"4\\\" name=\\\"content\\\" formControlName=\\\"content\\\" placeholder=\\\"Payment details:\\\">\\r\\n          </textarea>\\r\\n      <mat-error *ngIf=\\\"form.get('content').invalid\\\">{{error.content}}</mat-error>\\r\\n    </mat-form-field>\\r\\n    <button mat-raised-button color=\\\"red\\\" type=\\\"submit\\\">Commit</button>\\r\\n    <button mat-raised-button color=\\\"red\\\" (click)=\\\"form.reset()\\\">Abort</button>\\r\\n  </form>\\r\\n  </mat-card>\\r\\n\"","\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { Post } from '../post.model';\r\nimport { PostsService } from '../posts.service';\r\nimport {ActivatedRoute, ParamMap} from '@angular/router';\r\nimport { mimeType } from './mime-type.validator';\r\n\r\n@Component({\r\n  selector: 'app-post-create',\r\n  templateUrl: './post-create.component.html',\r\n  styleUrls: ['./post-create.component.css']\r\n})\r\n\r\nexport class PostCreateComponent implements OnInit {\r\n\r\n  enteredTitle = '';\r\n  enteredContent = '';\r\n  private mode = 'create'; \r\n  private postId: string;\r\n  form: FormGroup; \r\n  isLoading = false;\r\n  post: Post; \r\n  imagePreview: string;\r\n  constructor(public postsService: PostsService, public route: ActivatedRoute) {}\r\n    error = {title: 'Enter title', content: 'Enter details'};\r\n  ngOnInit() {\r\n    \r\n    this.form  = new FormGroup({\r\n      \r\n      title: new FormControl(null, {\r\n        validators: [Validators.required, Validators.minLength(3)] // payment title must be longer than 3 chrs\r\n      }),\r\n      content: new FormControl(null, {\r\n        validators: [Validators.required]\r\n      }),\r\n      image: new FormControl(null, {validators: [Validators.required], asyncValidators: [mimeType]})\r\n    });\r\n    this.route.paramMap.subscribe((paramMap: ParamMap) => {\r\n      if (paramMap.has('postId')) {\r\n        this.mode = 'edit';\r\n        this.postId = paramMap.get('postId');\r\n        this.isLoading = true;\r\n        this.postsService.getPost(this.postId).subscribe(postData => {\r\n          this.isLoading = false; \r\n          this.post = {id: postData._id, title: postData.title, content: postData.content, imagePath: postData.imagePath};\r\n          this.form.setValue({\r\n            title: this.post.title,\r\n            content: this.post.content,\r\n            image: this.post.imagePath\r\n          });\r\n        });\r\n      } else { \r\n        this.mode = 'create'; \r\n        this.postId = null;\r\n      }\r\n    });\r\n  }\r\n  onImagePicked(event: Event) {\r\n    const file = (event.target as HTMLInputElement).files[0];\r\n    this.form.patchValue({image: file});\r\n    this.form.get('image').updateValueAndValidity(); \r\n    const reader = new FileReader();\r\n    reader.onload = () => { \r\n      this.imagePreview = reader.result as string;\r\n    };\r\n    reader.readAsDataURL(file); \r\n\r\n  }\r\n  onSavePost() {\r\n    if (this.form.invalid) {\r\n      return;\r\n    }\r\n    this.isLoading = true;\r\n    if (this.mode === 'create') {\r\n      this.postsService.addPost(this.form.value.title, this.form.value.content, this.form.value.image);\r\n    } else {\r\n      this.postsService.updatePost(this.postId, this.form.value.title, this.form.value.content, this.form.value.image);\r\n    }\r\n    this.form.reset();\r\n  }\r\n}\r\n/**\r\n * When we want to edit ultility payment we fetch its data form \r\n * posts.service.ts and not from server. Same method should be applied for\r\n * dahboard component.\r\n */","module.exports = \"\\r\\n\\r\\n:host{\\r\\n  display:block;\\r\\n  margin-top: 1rem;\\r\\n}\\r\\n\\r\\n.info-text{\\r\\n  text-align:center;\\r\\n}\\r\\n\\r\\nmat-spinner {\\r\\n  margin: auto;\\r\\n}\\r\\n\\r\\n.post-image {\\r\\n  width: 70%;\\r\\n}\\r\\n\\r\\n.post-image img {\\r\\n  display: block;\\r\\n  margin-left: auto;\\r\\n  /*margin-right: auto;*/\\r\\n  width: 50%;\\r\\n  box-shadow: 1px 1px 5px rgba(0,0,0,0.5);\\r\\n}\\r\\n\\r\\nmat-expansion-panel {\\r\\n  display: block;\\r\\n  position: relative;\\r\\n  margin-left: 10px;\\r\\n  margin-top: 2px;\\r\\n  margin-bottom: 2px;\\r\\n  left: 233px;\\r\\n  bottom: 577px;\\r\\n  width: 90%;\\r\\n  background-color: #fffffff6;\\r\\n  }\\r\\n\\r\\n.info {\\r\\n    display: block;\\r\\n    position: relative;\\r\\n    margin-left: 10px;\\r\\n    margin-top: 2px;\\r\\n    margin-bottom: 2px;\\r\\n    left: 233px;\\r\\n    bottom: 577px;\\r\\n    width: 90%;\\r\\n    background-color: #fffffff6;\\r\\n  }\\r\\n\\r\\nmat-paginator {\\r\\n    position: relative;\\r\\n    bottom: 577px;\\r\\n    display: block;\\r\\n    -webkit-margin-before: 3px;\\r\\n            margin-block-start: 3px;\\r\\n    -webkit-margin-after: 9px;\\r\\n            margin-block-end: 9px;\\r\\n    margin-left: 244px;\\r\\n    width: auto;\\r\\n    padding: 0px 78px;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcG9zdHMvcG9zdC1saXN0L3Bvc3QtbGlzdC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBRUE7RUFDRSxhQUFhO0VBQ2IsZ0JBQWdCO0FBQ2xCOztBQUVBO0VBQ0UsaUJBQWlCO0FBQ25COztBQUVBO0VBQ0UsWUFBWTtBQUNkOztBQUVBO0VBQ0UsVUFBVTtBQUNaOztBQUVBO0VBQ0UsY0FBYztFQUNkLGlCQUFpQjtFQUNqQixzQkFBc0I7RUFDdEIsVUFBVTtFQUNWLHVDQUF1QztBQUN6Qzs7QUFFQTtFQUNFLGNBQWM7RUFDZCxrQkFBa0I7RUFDbEIsaUJBQWlCO0VBQ2pCLGVBQWU7RUFDZixrQkFBa0I7RUFDbEIsV0FBVztFQUNYLGFBQWE7RUFDYixVQUFVO0VBQ1YsMkJBQTJCO0VBQzNCOztBQUVGO0lBQ0ksY0FBYztJQUNkLGtCQUFrQjtJQUNsQixpQkFBaUI7SUFDakIsZUFBZTtJQUNmLGtCQUFrQjtJQUNsQixXQUFXO0lBQ1gsYUFBYTtJQUNiLFVBQVU7SUFDViwyQkFBMkI7RUFDN0I7O0FBRUY7SUFDSSxrQkFBa0I7SUFDbEIsYUFBYTtJQUNiLGNBQWM7SUFDZCwwQkFBdUI7WUFBdkIsdUJBQXVCO0lBQ3ZCLHlCQUFxQjtZQUFyQixxQkFBcUI7SUFDckIsa0JBQWtCO0lBQ2xCLFdBQVc7SUFDWCxpQkFBaUI7QUFDckIiLCJmaWxlIjoic3JjL2FwcC9wb3N0cy9wb3N0LWxpc3QvcG9zdC1saXN0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJcclxuXHJcbjpob3N0e1xyXG4gIGRpc3BsYXk6YmxvY2s7XHJcbiAgbWFyZ2luLXRvcDogMXJlbTtcclxufVxyXG5cclxuLmluZm8tdGV4dHtcclxuICB0ZXh0LWFsaWduOmNlbnRlcjtcclxufVxyXG5cclxubWF0LXNwaW5uZXIge1xyXG4gIG1hcmdpbjogYXV0bztcclxufVxyXG5cclxuLnBvc3QtaW1hZ2Uge1xyXG4gIHdpZHRoOiA3MCU7XHJcbn1cclxuXHJcbi5wb3N0LWltYWdlIGltZyB7XHJcbiAgZGlzcGxheTogYmxvY2s7XHJcbiAgbWFyZ2luLWxlZnQ6IGF1dG87XHJcbiAgLyptYXJnaW4tcmlnaHQ6IGF1dG87Ki9cclxuICB3aWR0aDogNTAlO1xyXG4gIGJveC1zaGFkb3c6IDFweCAxcHggNXB4IHJnYmEoMCwwLDAsMC41KTtcclxufVxyXG5cclxubWF0LWV4cGFuc2lvbi1wYW5lbCB7XHJcbiAgZGlzcGxheTogYmxvY2s7XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIG1hcmdpbi1sZWZ0OiAxMHB4O1xyXG4gIG1hcmdpbi10b3A6IDJweDtcclxuICBtYXJnaW4tYm90dG9tOiAycHg7XHJcbiAgbGVmdDogMjMzcHg7XHJcbiAgYm90dG9tOiA1NzdweDtcclxuICB3aWR0aDogOTAlO1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmZmZmZmNjtcclxuICB9XHJcblxyXG4uaW5mbyB7XHJcbiAgICBkaXNwbGF5OiBibG9jaztcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIG1hcmdpbi1sZWZ0OiAxMHB4O1xyXG4gICAgbWFyZ2luLXRvcDogMnB4O1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMnB4O1xyXG4gICAgbGVmdDogMjMzcHg7XHJcbiAgICBib3R0b206IDU3N3B4O1xyXG4gICAgd2lkdGg6IDkwJTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmZmZmZmNjtcclxuICB9XHJcbiAgXHJcbm1hdC1wYWdpbmF0b3Ige1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgYm90dG9tOiA1NzdweDtcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgbWFyZ2luLWJsb2NrLXN0YXJ0OiAzcHg7XHJcbiAgICBtYXJnaW4tYmxvY2stZW5kOiA5cHg7XHJcbiAgICBtYXJnaW4tbGVmdDogMjQ0cHg7XHJcbiAgICB3aWR0aDogYXV0bztcclxuICAgIHBhZGRpbmc6IDBweCA3OHB4O1xyXG59XHJcbiJdfQ== */\"","module.exports = \"\\r\\n<mat-spinner *ngIf=\\\"isLoading\\\"></mat-spinner>\\r\\n<!--hide list of pyments untill all of them are loaded form server-->\\r\\n<mat-accordion multi=\\\"true\\\" *ngIf=\\\"posts.length>0 && !isLoading\\\">\\r\\n  <mat-expansion-panel *ngFor=\\\"let post of posts\\\">\\r\\n    <mat-expansion-panel-header>\\r\\n      {{post.title}}\\r\\n    </mat-expansion-panel-header>\\r\\n    <hr>\\r\\n    <div class='post-image'>\\r\\n      <img [src]='post.imagePath' [alt]='post.title'></div>\\r\\n    <mat-action-row>\\r\\n      <a mat-button color=\\\"primary\\\" [routerLink]=\\\"['/edit', post.id]\\\">Edit</a>\\r\\n      <button mat-button color=\\\"warn\\\" (click)=\\\"onDelete(post.id)\\\">Delete</button>\\r\\n    </mat-action-row>\\r\\n    {{post.content}}\\r\\n  </mat-expansion-panel>\\r\\n</mat-accordion>\\r\\n<div class=\\\"footer\\\">\\r\\n  <mat-paginator [length]=\\\"totalPosts\\\" [pageSize]=\\\"postsPerPage\\\" [pageSizeOptions]=\\\"pageSizeOptions\\\"\\r\\n    (page)=\\\"onChangedPage($event)\\\" *ngIf=\\\"posts.length > 0\\\">\\r\\n  </mat-paginator>\\r\\n</div>\\r\\n\\r\\n<mat-card layout='row' class=\\\"info\\\" *ngIf=\\\"posts.length<=0 && !isLoading\\\">\\r\\n  <mat-card-content class=\\\"mat-body-1 info-text\\\">There are no payments.</mat-card-content>\\r\\n</mat-card>\"","\r\nimport {Component, OnInit, OnDestroy, Injectable} from '@angular/core';\r\nimport { PageEvent } from '@angular/material';\r\nimport { Post } from '../post.model';\r\nimport { PostsService } from '../posts.service';\r\nimport { Subscription } from 'rxjs';\r\nimport { AuthService } from '../../auth/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-post-list',\r\n  templateUrl: './post-list.component.html',\r\n  styleUrls: ['./post-list.component.css']\r\n})\r\n@Injectable()\r\nexport class PostListComponent implements OnInit, OnDestroy{\r\nposts: Post[] = []; \r\nisLoading = false; // varible to set if we are fetching data (in a meantime front-end shows spinner)\r\ntotalPosts = 0; \r\npostsPerPage = 2; \r\ncurrentPage = 1; \r\npageSizeOptions = [1, 2, 5, 10]; \r\nuserIsAuthenticated = false;\r\n\r\nprivate authStatusSub: Subscription;\r\nprivate postSub: Subscription; // subscription object to listen when utility pymnts are updated\r\n\r\n constructor(public postsService: PostsService, public authService: AuthService) {}\r\n \r\n ngOnInit() {\r\n  this.isLoading = true; // show loading spinner on frontend\r\n  const userId = this.authService.getUserId(); //get logged in user id\r\n  this.postsService.getPosts(this.postsPerPage, this.currentPage, userId); // get chunk of utility payments\r\n  this.postSub = this.postsService.getPostUpdateListener()\r\n    .subscribe((postData: {posts: Post[], postCount: number}) => { //wait for data to be fetched\r\n      this.isLoading = false; \r\n      this.totalPosts = postData.postCount;\r\n      this.posts = postData.posts;\r\n       });\r\n       \r\n  this.userIsAuthenticated = this.authService.getIsAuth(); //check if user is authenticated\r\n  this.authStatusSub = this.authService\r\n      .getAuthStatusListener()\r\n      .subscribe(isAuthenticated => { // listen to the repsponse and catch it when it is emitted\r\n        this.userIsAuthenticated = isAuthenticated; \r\n      });\r\n     \r\n  }\r\n  ngOnDestroy() {\r\n    this.postSub.unsubscribe();\r\n  }\r\n\r\n  onChangedPage(pageData: PageEvent) { \r\n    this.isLoading = true; \r\n    this.currentPage = pageData.pageIndex + 1; \r\n    this.postsPerPage = pageData.pageSize;\r\n    const userId = this.authService.getUserId();\r\n    this.postsService.getPosts(this.postsPerPage, this.currentPage, userId); \r\n  }\r\n  onDelete(postId: string) {\r\n    this.isLoading = true;\r\n    this.postsService.deletePost(postId).subscribe(() => {\r\n      const userId = this.authService.getUserId();\r\n      this.postsService.getPosts(this.postsPerPage, this.currentPage, userId);\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { Subject } from \"rxjs\";\r\nimport { map } from \"rxjs/operators\";\r\n\r\nimport { Post } from \"./post.model\";\r\nimport { Router } from \"@angular/router\";\r\n\r\n@Injectable({ providedIn: \"root\" })\r\nexport class PostsService {\r\n  private posts: Post[] = [];\r\n  private postsUpdated = new Subject<{ posts: Post[]; postCount: number }>();\r\n\r\n  constructor(private http: HttpClient, private router: Router) {}\r\n\r\n  // function to fetch utility payments from server in a chunks for a given userId\r\n  getPosts(postsPerPage: number, currentPage: number, userId: string) {\r\n    const queryParams = `?pagesize=${[\r\n      postsPerPage,\r\n    ]}&page=${currentPage}&creator=${userId}`;\r\n    this.http\r\n      .get<{ message: string; posts: any; maxPosts: number }>(\r\n        \"http://localhost:3000/api/posts\" + queryParams\r\n      )\r\n      .pipe(\r\n        map((postData) => {\r\n          return {\r\n            posts: postData.posts.map((post) => {\r\n              return {\r\n                id: post._id,\r\n                title: post.title,\r\n                content: post.content,\r\n                imagePath: post.imagePath,\r\n                creator: post.creator,\r\n              };\r\n            }),\r\n            maxPosts: postData.maxPosts,\r\n          };\r\n        })\r\n      )\r\n      .subscribe((transformedPostsData) => {\r\n        this.posts = transformedPostsData.posts;\r\n        this.postsUpdated.next({\r\n          posts: [...this.posts],\r\n          postCount: transformedPostsData.maxPosts,\r\n        });\r\n      });\r\n  }\r\n\r\n  getPostUpdateListener() {\r\n    return this.postsUpdated.asObservable();\r\n  }\r\n  getPost(id: string) {\r\n    return this.http.get<{\r\n      _id: string;\r\n      title: string;\r\n      content: string;\r\n      imagePath: string;\r\n    }>(\"http://localhost:3000/api/posts/\" + id);\r\n  }\r\n  addPost(title: string, content: string, image: File) {\r\n    const postData = new FormData();\r\n    postData.append(\"title\", title);\r\n    postData.append(\"content\", content);\r\n    postData.append(\"image\", image, title);\r\n    this.http\r\n      .post<{ message: string; post: Post }>(\r\n        \"http://localhost:3000/api/posts/\",\r\n        postData\r\n      )\r\n      .subscribe((responseData) => {\r\n        this.router.navigate([\"/list\"]); // upon successful payment editing navigate user to list of all payments\r\n      });\r\n  }\r\n  // method for updating utility payment\r\n  updatePost(id: string, title: string, content: string, image: File | string) {\r\n    let postData: Post | FormData;\r\n    if (typeof image === \"object\") {\r\n      postData = new FormData();\r\n      postData.append(\"id\", id);\r\n      postData.append(\"title\", title);\r\n      postData.append(\"content\", content);\r\n      postData.append(\"image\", image, title);\r\n    } else {\r\n      postData = {\r\n        id: id,\r\n        title: title,\r\n        content: content,\r\n        imagePath: image,\r\n      };\r\n    }\r\n    this.http\r\n      .put(\"http://localhost:3000/api/posts/\" + id, postData)\r\n      .subscribe((response) => {\r\n        this.router.navigate([\"/list\"]);\r\n      });\r\n  }\r\n\r\n  deletePost(postId: string) {\r\n    return this.http.delete(\"http://localhost:3000/api/posts/\" + postId);\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Rlc3QtY29tcG9uZW50L3Rlc3QuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"\\r\\n\\r\\n <h3 align=\\\"center\\\">Test component</h3>\"","\r\n\r\nimport {Component, HostBinding, Input, OnInit} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-test',\r\n  templateUrl: './test.component.html',\r\n  styleUrls: ['./test.component.css'],\r\n})\r\nexport class TestComponent { }\r\n","\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n\r\n","\r\nimport { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\n/**\r\n * First part of function call start Angular app in browser and the\r\n * second part starts module (defined in app.module.ts in export class) \r\n */\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n\r\n"],"sourceRoot":""}